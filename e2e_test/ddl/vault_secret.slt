# Test for HashiCorp Vault secret backend

# Test with token auth - using real vault server from docker-compose
statement ok
CREATE SECRET vault_token_secret
WITH (
  backend = 'hashicorp_vault',
  addr = 'http://vault-server:8200',
  path = 'secret/data/myapp/db',
  field = 'password',
  auth_method = 'token',
  auth_token = 'root-token',
  tls_skip_verify = 'true',
  cache_ttl_secs = '300'
) AS NULL;

statement ok
SHOW SECRETS;

# Test that we can create another vault secret with different configuration
statement ok
CREATE SECRET vault_api_key
WITH (
  backend = 'hashicorp_vault',
  addr = 'http://vault-server:8200',
  path = 'secret/data/myapp/api_key',
  field = 'key',
  auth_method = 'token',
  auth_token = 'root-token'
) AS NULL;

statement ok
SHOW SECRETS;

# Test error case - invalid field
statement error
CREATE SECRET vault_invalid_field
WITH (
  backend = 'hashicorp_vault',
  addr = 'http://vault-server:8200',
  path = 'secret/data/myapp/db',
  field = 'nonexistent_field',
  auth_method = 'token',
  auth_token = 'root-token'
) AS NULL;

# Test error case - missing required parameter
statement error
CREATE SECRET vault_missing_addr
WITH (
  backend = 'hashicorp_vault',
  path = 'secret/data/myapp/db',
  auth_method = 'token',
  auth_token = 'root-token'
) AS NULL;

# Drop secrets
statement ok
DROP SECRET vault_token_secret;

statement ok
DROP SECRET vault_api_key;

statement ok
SHOW SECRETS;
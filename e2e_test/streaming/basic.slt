statement ok
create table t1 (v1 int, v2 int, v3 int);

statement ok
create table t2 (v1 int, v2 int, v3 int);

statement ok
create table t3 (v1 int, v2 int, v3 int);

statement ok
create table t4 (v1 real, v2 int, v3 real);

statement ok
create table t5 (d decimal);

statement ok
insert into t1 values (1,4,2), (2,3,3);

statement ok
insert into t3 values (1,3,5), (2,4,6);

statement ok
insert into t4 values (1,1,4), (5,1,4), (1,9,1), (9,8,1), (0,2,3);

statement ok
insert into t5 values ('NaN'::decimal);

statement ok
insert into t5 values ('+inf');

statement ok
insert into t5 values ('-inf');

statement ok
flush;

statement ok
create materialized view mv1 as select * from t1;

statement ok
create materialized view mv2 as select round(avg(v1), 1) as avg_v1, sum(v2) as sum_v2, count(v3) as count_v3 from t1;

statement ok
create materialized view mv3 as select v3, sum(v1) as sum_v1, min(v1) as min_v1, max(v1) as max_v1 from t4 group by v3;

statement ok
create materialized view mv4 as select count(*) as count, d from t5 group by d;

query III rowsort
select v1, v2, v3 from mv1;
----
1 4 2
2 3 3

query RII rowsort
select avg_v1, sum_v2, count_v3 from mv2;
----
1.5 7 2

statement ok
insert into t1 values (3,4,4), (4,3,5);

statement ok
flush;

query III rowsort
select v1, v2, v3 from mv1;
----
1 4 2
2 3 3
3 4 4
4 3 5

query RII rowsort
select avg_v1, sum_v2, count_v3 from mv2;
----
2.5 14 4

query RRRR
select sum_v1, min_v1, max_v1, v3 from mv3 order by sum_v1;
----
0  0 0 3
6  1 5 4
10 1 9 1

query IR rowsort
select * from mv4
----
1	-Infinity
1	Infinity
1	NaN

statement ok
drop materialized view mv1

statement ok
drop materialized view mv2

statement ok
drop materialized view mv3

statement ok
drop materialized view mv4

statement ok
drop table t1

statement ok
drop table t2

statement ok
drop table t3

statement ok
drop table t4

statement ok
drop table t5

statement ok
create table t (v1 int, v2 int);

statement error
create materialized view mv(a) as select * from t;

statement error
create materialized view mv(a,b,c) as select * from t;

statement ok
create materialized view mv(a,b) as select * from t;

statement ok
drop materialized view mv

statement ok
drop table t

statement ok
create table t (v1 int, v2 int);

statement ok
create materialized view if not exists mv as select count(*) from t;

statement ok
create materialized view if not exists mv as select count(*) from t;

statement ok
drop materialized view mv

statement ok
drop table t

statement ok
CREATE MATERIALIZED VIEW mv AS SELECT random();

statement ok
drop materialized view mv


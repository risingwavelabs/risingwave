query TITTTT rowsort
SELECT ns.nspname, t.oid, t.typname, t.typtype, t.typnotnull, t.elemtypoid
FROM (
    -- Arrays have typtype=b - this subquery identifies them by their typreceive and converts their typtype to a
    -- We first do this for the type (innerest-most subquery), and then for its element type
    -- This also returns the array element, range subtype and domain base type as elemtypoid
    SELECT
        typ.oid, typ.typnamespace, typ.typname, typ.typtype, typ.typrelid, typ.typnotnull, typ.relkind,
        elemtyp.oid AS elemtypoid, elemtyp.typname AS elemtypname, elemcls.relkind AS elemrelkind,
        CASE WHEN elemproc.proname='array_recv' THEN 'a' ELSE elemtyp.typtype END AS elemtyptype
    FROM (
        SELECT typ.oid, typnamespace, typname, typrelid, typnotnull, relkind, typelem AS elemoid,
            CASE WHEN proc.proname='array_recv' THEN 'a' ELSE typ.typtype END AS typtype,
            CASE
                WHEN proc.proname='array_recv' THEN typ.typelem
                WHEN typ.typtype='d' THEN typ.typbasetype
            END AS elemtypoid
        FROM pg_type AS typ
        LEFT JOIN pg_class AS cls ON (cls.oid = typ.typrelid)
        LEFT JOIN pg_proc AS proc ON proc.oid = typ.typreceive
    ) AS typ
    LEFT JOIN pg_type AS elemtyp ON elemtyp.oid = elemtypoid
    LEFT JOIN pg_class AS elemcls ON (elemcls.oid = elemtyp.typrelid)
    LEFT JOIN pg_proc AS elemproc ON elemproc.oid = elemtyp.typreceive
) AS t
JOIN pg_namespace AS ns ON (ns.oid = typnamespace)
WHERE
    typtype IN ('b', 'r', 'm', 'e', 'd') OR -- Base, range, multirange, enum, domain
    (typtype = 'c' AND relkind='c') OR -- User-defined free-standing composites (not table composites) by default
    (typtype = 'p' AND typname IN ('record', 'void')) OR -- Some special supported pseudo-types
    (typtype = 'a' AND (  -- Array of...
        elemtyptype IN ('b', 'r', 'm', 'e', 'd') OR -- Array of base, range, multirange, enum, domain
        (elemtyptype = 'p' AND elemtypname IN ('record', 'void')) OR -- Arrays of special supported pseudo-types
        (elemtyptype = 'c' AND elemrelkind='c') -- Array of user-defined free-standing composites (not table composites) by default
    ))
ORDER BY CASE
       WHEN typtype IN ('b', 'e', 'p') THEN 0           -- First base types, enums, pseudo-types
       WHEN typtype = 'r' THEN 1                        -- Ranges after
       WHEN typtype = 'm' THEN 2                        -- Multiranges after
       WHEN typtype = 'c' THEN 3                        -- Composites after
       WHEN typtype = 'd' AND elemtyptype <> 'a' THEN 4 -- Domains over non-arrays after
       WHEN typtype = 'a' THEN 5                        -- Arrays after
       WHEN typtype = 'd' AND elemtyptype = 'a' THEN 6  -- Domains over arrays last
END;
----
pg_catalog 1000 _bool b f NULL
pg_catalog 1001 _bytea b f NULL
pg_catalog 1005 _int2 b f NULL
pg_catalog 1007 _int4 b f NULL
pg_catalog 1015 _varchar b f NULL
pg_catalog 1016 _int8 b f NULL
pg_catalog 1021 _float4 b f NULL
pg_catalog 1022 _float8 b f NULL
pg_catalog 1043 varchar b f NULL
pg_catalog 1082 date b f NULL
pg_catalog 1083 time b f NULL
pg_catalog 1114 timestamp b f NULL
pg_catalog 1115 _timestamp b f NULL
pg_catalog 1182 _date b f NULL
pg_catalog 1183 _time b f NULL
pg_catalog 1184 timestamptz b f NULL
pg_catalog 1185 _timestamptz b f NULL
pg_catalog 1186 interval b f NULL
pg_catalog 1187 _interval b f NULL
pg_catalog 1231 _numeric b f NULL
pg_catalog 1301 rw_int256 b f NULL
pg_catalog 1302 _rw_int256 b f NULL
pg_catalog 1305 rw_uint256 b f NULL
pg_catalog 1306 _rw_uint256 b f NULL
pg_catalog 16 bool b f NULL
pg_catalog 17 bytea b f NULL
pg_catalog 1700 numeric b f NULL
pg_catalog 20 int8 b f NULL
pg_catalog 21 int2 b f NULL
pg_catalog 23 int4 b f NULL
pg_catalog 25 text b f NULL
pg_catalog 3802 jsonb b f NULL
pg_catalog 3807 _jsonb b f NULL
pg_catalog 700 float4 b f NULL
pg_catalog 701 float8 b f NULL
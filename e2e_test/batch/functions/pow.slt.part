query R
select pow(2.0, 3.0)
----
8

query R
select power(2.0, 3.0)
----
8

query R
select pow(2.0::decimal, 3.0::decimal)
----
8

query R
select pow(2.0::double, 3.0::double)
----
8

query R
select pow(2.0::smallint, 3.0::smallint)
----
8

query R
select pow(2.0::bigint, 3.0::bigint)
----
8

query R
select pow(2.0, -2);
----
0.25

query R
select pow(2.23::float8, -2.33);
----
0.15432975583772085

query R
select pow(100000, 0);
----
1

statement error underflow
select pow(100000, -200000000000000);

statement error Numeric out of range
select pow(100000, 200000000000000);


statement error Numeric out of range
select pow(-100000, 200000000000001);

query R
select exp(0::smallint);
----
1

query R
select 2.0 ^ 3.0
----
8

query R
select 2.0::decimal ^ 3.0::decimal
----
8

query R
select 2.0::double ^ 3.0::double
----
8

query R
select 2.0::smallint ^ 3.0::smallint
----
8

query R
select 2.0::bigint ^ 3.0::bigint
----
8

query R
select 2.0 ^ -2;
----
0.25

query R
select 2.23::float8 ^ -2.33;
----
0.15432975583772085

query R
select 100000 ^ 0;
----
1

statement error underflow
select 100000 ^ -200000000000000;

statement error Numeric out of range
select 100000 ^ 200000000000000;


statement error Numeric out of range
select -100000 ^ 200000000000001;

query RRRR
with t(x, y) as (values
	('1', 'nan'),
	('0', 'nan'),
	('nan', '0'),
	('nan', '-0'),
	('0', 'inf'),
	('-0', 'inf'),
	('-1', 'inf'),
	('-1', '-inf'),
	('0.5', 'inf'),
	('0.5', '-inf'),
	('2', 'inf'),
	('2', '-inf'),
	('-0.5', 'inf'),
	('-0.5', '-inf'),
	('-2', 'inf'),
	('-2', '-inf'),
	('inf', '0'),
	('inf', '-0'),
	('-inf', '0'),
	('-inf', '-0'),
	('inf', '0.5'),
	('inf', '-0.5'),
	('-inf', '2'),
	('-inf', '3'),
	('-inf', '-2'),
	('-inf', '-3'),
	('-0', '3'),
	('-0', '0.5'),
	('0'::float8, '-0'::float8))
select x, y, x ^ y, (x::decimal ^ y::decimal)::float8 from t;
----
        1       NaN         1         1
        0       NaN       NaN       NaN
      NaN         0         1         1
      NaN        -0         1         1
        0  Infinity         0         0
       -0  Infinity         0         0
       -1  Infinity         1         1
       -1 -Infinity         1         1
      0.5  Infinity         0         0
      0.5 -Infinity  Infinity  Infinity
        2  Infinity  Infinity  Infinity
        2 -Infinity         0         0
     -0.5  Infinity         0         0
     -0.5 -Infinity  Infinity  Infinity
       -2  Infinity  Infinity  Infinity
       -2 -Infinity         0         0
 Infinity         0         1         1
 Infinity        -0         1         1
-Infinity         0         1         1
-Infinity        -0         1         1
 Infinity       0.5  Infinity  Infinity
 Infinity      -0.5         0         0
-Infinity         2  Infinity  Infinity
-Infinity         3 -Infinity -Infinity
-Infinity        -2         0         0
-Infinity        -3        -0         0
       -0         3        -0         0
       -0       0.5         0         0
        0        -0         1         1

query RRRR
with t(v) as (
	values ('-inf'::float8), ('inf'), ('nan')
) select x, y, x ^ y, x::decimal ^ y::decimal from t as a(x), t as b(y);
----
-Infinity -Infinity        0        0
-Infinity  Infinity Infinity Infinity
-Infinity       NaN      NaN      NaN
 Infinity -Infinity        0        0
 Infinity  Infinity Infinity Infinity
 Infinity       NaN      NaN      NaN
      NaN -Infinity      NaN      NaN
      NaN  Infinity      NaN      NaN
      NaN       NaN      NaN      NaN

statement error zero raised to a negative power is undefined
select pow(0::decimal, '-inf'::decimal);

statement error a negative number raised to a non-integer power yields a complex result
select pow('-inf'::decimal, 0.5);

statement error zero raised to a negative power is undefined
select pow(0::decimal, -2::decimal);

statement error a negative number raised to a non-integer power yields a complex result
select pow(-1::decimal, 0.5);

statement error overflow
select pow(2::decimal, 96::decimal);

# This is considered underflow error for float8 but okay for decimal
query R
select pow(0.5::decimal, 2000::decimal)::float8;
----
0

# But rust_decimal is not good at this. Should be 0.
statement error
select pow(1e28, -2);

query R
select exp(0.0);
----
1

query R
select exp(0.0::decimal);
----
1

query R
select exp(2.0::double precision);
----
7.38905609893065

query R
select exp(2::smallint)
----
7.38905609893065

statement error Numeric out of range: overflow
select exp(10000000);

statement error Numeric out of range: underflow
select exp(-10000000);

query TRR
with t(v) as (
	values ('nan'), ('inf'), ('-inf'), ('-0')
) select
	v,
	trim_scale(exp(v::decimal)),
	exp(v::float8)
from t;
----
nan       NaN      NaN
inf  Infinity Infinity
-inf        0        0
-0          1        1

query TRR
with t(v) as (
	values ('nan'), ('inf')
) select
	v,
	ln(v::decimal),
	ln(v::float8),
	log(v::decimal),
	log(v::float8),
	log10(v::decimal),
	log10(v::float8)
from t;
----
nan      NaN      NaN      NaN      NaN      NaN      NaN
inf Infinity Infinity Infinity Infinity Infinity Infinity

statement error zero
select ln('0'::decimal);

statement error negative
select ln('-1'::decimal);

statement error negative
select ln('-inf'::decimal);

statement error zero
select log10('0'::float8);

statement error negative
select log10('-1'::float8);

statement error negative
select log10('-inf'::float8);

query TR
select
	pg_typeof(exp(1::decimal)),
	round(exp(1::decimal), 3);
----
numeric 2.718

query R
select round(exp(12::decimal), 7);
----
162754.7914190

statement error overflow
select exp(67::decimal);

query RRTR
select
	ln(exp(1::float8)),
	log(10::float8),
	abs(ln(exp(1::decimal)) - 1) < 1e-9,
	log(10::decimal)::float8;
----
1 1 t 1

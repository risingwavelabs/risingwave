control substitution on

system ok
rpk topic create test_alter_conn_1 -X brokers=message_queue_sasl_1:19092 -X sasl.mechanism=PLAIN -X user=dev -X pass=rw

system ok
cat << EOF | rpk topic produce test_alter_conn_1 -X brokers=message_queue_sasl_1:19092 -X sasl.mechanism=PLAIN -X user=dev -X pass=rw
{"x": 1}
{"x": 2}
{"x": 3}
EOF

system ok
rpk topic create test_alter_conn_1 -p 2 -X brokers=message_queue_sasl_2:19093 -X sasl.mechanism=PLAIN -X user=dev1 -X pass=rw

system ok
cat << EOF | rpk topic produce test_alter_conn_1 -p 0 -X brokers=message_queue_sasl_2:19093 -X sasl.mechanism=PLAIN -X user=dev1 -X pass=rw
{"x": 4}
{"x": 5}
{"x": 6}
EOF

statement ok
create secret s_broker with ( backend = 'meta' ) as 'message_queue_sasl_1:19092';

statement ok
create connection kafka_conn with (
    type = 'kafka',
    properties.bootstrap.server = secret s_broker,
    properties.security.protocol = 'SASL_PLAINTEXT',
    properties.sasl.mechanism = 'PLAIN',
    properties.sasl.username = 'dev',
    properties.sasl.password = 'rw'
);

statement ok
create connection kafka_bk with (
    type = 'kafka',
    properties.bootstrap.server = 'message_queue_sasl_2:19093',
    properties.security.protocol = 'SASL_PLAINTEXT',
    properties.sasl.mechanism = 'PLAIN',
    properties.sasl.username = 'dev1',
    properties.sasl.password = 'rw'
);


statement ok
create table t_conn(x int) with (
    connector = 'kafka',
    connection = kafka_conn,
    topic = 'test_alter_conn_1'
) format plain encode json;


query I retry 3 backoff 1s
select * from t_conn order by x;
----
1
2
3


statement ok
alter secret s_broker with ( backend = 'meta' ) as 'message_queue_sasl_2:19093';

statement ok
alter connection kafka_conn connector with (properties.sasl.username = 'dev1');

# add data to a new partition, to test enumerator work as expected
system ok
cat << EOF | rpk topic produce test_alter_conn_1 -p 0 -X brokers=message_queue_sasl_2:19093 -X sasl.mechanism=PLAIN -X user=dev1 -X pass=rw
{"x": 7}
{"x": 8}
{"x": 9}
EOF

system ok
cat << EOF | rpk topic produce test_alter_conn_1 -p 1 -X brokers=message_queue_sasl_2:19093 -X sasl.mechanism=PLAIN -X user=dev1 -X pass=rw
{"x": 10}
{"x": 11}
{"x": 12}
EOF

# add data to original topic, it should not be ingested
system ok
cat << EOF | rpk topic produce test_alter_conn_1 -X brokers=message_queue_sasl_1:19092 -X sasl.mechanism=PLAIN -X user=dev -X pass=rw
{"x": 13}
{"x": 14}
{"x": 15}
EOF

sleep 5s

query I retry 5 backoff 3s
select * from t_conn order by x;
----
1
2
3
7
8
9
10
11
12


# ===== clean up =====

statement ok
drop table t_conn;

statement ok
drop connection kafka_conn;

statement ok
drop connection kafka_bk;

statement ok
drop secret s_broker;

system ok
rpk topic delete test_alter_conn_1 -X brokers=message_queue_sasl_1:19092 -X sasl.mechanism=PLAIN -X user=dev -X pass=rw

system ok
rpk topic delete test_alter_conn_1 -X brokers=message_queue_sasl_2:19093 -X sasl.mechanism=PLAIN -X user=dev1 -X pass=rw

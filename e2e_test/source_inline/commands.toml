# This file contains commands used by the tests.


# Note about the Kafka CLI tooling:
# - Built-in Kafka console tools:
#       Java based.
#       Style example: kafka-topics.sh --bootstrap-server localhost:9092 --topic t --create
#       Some limitations: cannot disable logging easily, cannot consume to end and then exit.
# - kcat:
#       C based (rdkafka)
#       Some limitations: cannot do admin operations, only consume/produce.
# - rpk:
#       Golang based.
#       Style example: RPK_BROKERS=localhost:9092 rpk topic create t
[tasks.check-kafka]
private = true
description = "Check if Kafka is started by RiseDev"
dependencies = ["check-and-load-risedev-env-file"]
script = '''
#!/usr/bin/env sh
set -e

if [ -z "${RISEDEV_KAFKA_BOOTSTRAP_SERVERS}" ]; then
    echo "RISEDEV_KAFKA_BOOTSTRAP_SERVERS is not set in risedev-env file. Did you start Kafka using $(tput setaf 4)\`./risedev d\`$(tput sgr0)?"
    exit 1
fi
'''

[tasks.clean-kafka]
category = "RiseDev - Test - Source Test - Kafka"
description = "Delete all kafka topics."
dependencies = ["check-and-load-risedev-env-file"]
script = '''
#!/usr/bin/env sh
set -e

if [ -n "${RISEDEV_KAFKA_BOOTSTRAP_SERVERS}" ]; then
    echo "Deleting all Kafka consumer groups..."
    rpk group list | tail -n +2 | awk '{print $2}' | while read -r group; do
        echo "Deleting Kafka consumer group: $group"
        rpk group delete "$group"
    done
    echo "Deleting all Kafka topics..."
    rpk topic delete -r "*"
    echo "Deleting all schema registry subjects"
    rpk sr subject list | while read -r subject; do
        echo "Deleting schema registry subject: $subject"
        rpk sr subject delete "$subject"
        rpk sr subject delete "$subject" --permanent
    done
else
    echo "No Kafka to clean."
fi
'''

# rpk tools
[tasks.rpk]
category = "RiseDev - Test - Source Test - Kafka"
dependencies = ["check-kafka"]
# check https://docs.redpanda.com/current/reference/rpk/rpk-x-options/ or rpk -X help/list for options
script = """
#!/usr/bin/env sh
set -e

if [ -z "$(which rpk)" ]; then
    echo "rpk is not installed. Install it via https://docs.redpanda.com/current/get-started/rpk-install/"
    exit 1
fi

rpk "$@"
"""

[tasks.redpanda-console]
category = "RiseDev - Test - Source Test - Kafka"
description = "Start Redpanda console (Kafka GUI) at localhost:8080."
dependencies = ["check-kafka"]
script = '''
#!/usr/bin/env sh
set -e
echo "$(tput setaf 2)Start Redpanda console at http://localhost:8080$(tput sgr0)"
docker run --network host -e KAFKA_BROKERS=$RPK_BROKERS docker.redpanda.com/redpandadata/console:latest
'''

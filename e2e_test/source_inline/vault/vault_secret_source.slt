# Test for HashiCorp Vault secret backend integration with sources

# hashicorp vault set by `ci/scripts/setup-vault.sh`

# Create a Vault secret for database password
statement ok
CREATE SECRET vault_kafka_password
WITH (
  backend = 'hashicorp_vault',
  addr = 'http://vault-server:8200',
  path = 'secret/data/myapp/kafka',
  field = 'password',
  auth_method = 'token',
  auth_token = 'root-token'
) AS NULL;

# Create a regular meta secret for username (to test mixed secret backends)
statement ok
CREATE SECRET kafka_username AS 'dev';

# Verify secrets are created
query T
SELECT name FROM rw_secrets ORDER BY name;
----
kafka_username
vault_kafka_password


system ok
cat << EOF | kcat -b message_queue_sasl_1:19092 -X security.protocol=SASL_PLAINTEXT -X sasl.mechanism=PLAIN -X sasl.username=dev -X sasl.password=rw -P -t test_kafka_secret_vault
{"x": "a"}
{"x": "b"}
{"x": "c"}
EOF


statement ok
CREATE TABLE test_table (
  id int,
  name varchar
) WITH (
  connector = 'kafka',
  properties.bootstrap.server = 'message_queue_sasl_1:19092',
  properties.sasl.username = SECRET kafka_username,
  properties.sasl.password = SECRET vault_kafka_password,
  properties.security.protocol = 'SASL_SSL',
  properties.sasl.mechanism = 'PLAIN',
  topic = 'test_kafka_secret_vault',
) format plain encode json;

# Show the table was created successfully
query T
SELECT table_name FROM information_schema.tables WHERE table_name = 'test_table';
----
test_table


query I retry 3 backoff 1s
select count(*) from test_table
----
3


# Clean up
statement ok
DROP TABLE test_table;

statement ok
DROP SECRET vault_kafka_password;

statement ok
DROP SECRET kafka_username;

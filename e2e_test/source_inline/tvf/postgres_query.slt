control substitution on

system ok
PGDATABASE=source_test createdb

system ok
PGDATABASE=source_test psql -c "
CREATE TABLE test (
    id bigint primary key,
    v1 bool,
    v2 smallint,
    v3 integer,
    v4 bigint,
    v5 real,
    v6 double precision,
    v7 numeric,
    v8 date,
    v9 time,
    v10 timestamp,
    v11 timestamptz,
    v12 text,
    v13 varchar,
    v14 interval,
    v15 jsonb,
    v16 bytea
);"

system ok
PGDATABASE=source_test psql -c "
INSERT INTO test SELECT generate_series(1, 100), true, 1, 1, 1, 1.0, 1.0, 1.0, '2021-01-01', '00:00:00', '2021-01-01 00:00:00', '2021-01-01 00:00:00 pst', 'text', 'varchar', '1 day', '{}', '\x01';
"

statement ok
create source postgres_cdc_source with (
  ${RISEDEV_POSTGRES_WITH_OPTIONS_COMMON},
  username = '$PGUSER',
  password = '$PGPASSWORD',
  database.name = 'source_test'
);

sleep 1s

query II
select * from postgres_query('$PGHOST', '$PGPORT', '$PGUSER', '$PGPASSWORD', 'source_test', 'select * from test where id > 90;');
----
91 t 1 1 1 1 1 1.0 2021-01-01 00:00:00 2021-01-01 00:00:00 2021-01-01 08:00:00+00:00 text varchar 1 day {} \x01
92 t 1 1 1 1 1 1.0 2021-01-01 00:00:00 2021-01-01 00:00:00 2021-01-01 08:00:00+00:00 text varchar 1 day {} \x01
93 t 1 1 1 1 1 1.0 2021-01-01 00:00:00 2021-01-01 00:00:00 2021-01-01 08:00:00+00:00 text varchar 1 day {} \x01
94 t 1 1 1 1 1 1.0 2021-01-01 00:00:00 2021-01-01 00:00:00 2021-01-01 08:00:00+00:00 text varchar 1 day {} \x01
95 t 1 1 1 1 1 1.0 2021-01-01 00:00:00 2021-01-01 00:00:00 2021-01-01 08:00:00+00:00 text varchar 1 day {} \x01
96 t 1 1 1 1 1 1.0 2021-01-01 00:00:00 2021-01-01 00:00:00 2021-01-01 08:00:00+00:00 text varchar 1 day {} \x01
97 t 1 1 1 1 1 1.0 2021-01-01 00:00:00 2021-01-01 00:00:00 2021-01-01 08:00:00+00:00 text varchar 1 day {} \x01
98 t 1 1 1 1 1 1.0 2021-01-01 00:00:00 2021-01-01 00:00:00 2021-01-01 08:00:00+00:00 text varchar 1 day {} \x01
99 t 1 1 1 1 1 1.0 2021-01-01 00:00:00 2021-01-01 00:00:00 2021-01-01 08:00:00+00:00 text varchar 1 day {} \x01
100 t 1 1 1 1 1 1.0 2021-01-01 00:00:00 2021-01-01 00:00:00 2021-01-01 08:00:00+00:00 text varchar 1 day {} \x01

query II
select * from postgres_query('postgres_cdc_source', 'select * from test where id > 90;');
----
91 t 1 1 1 1 1 1.0 2021-01-01 00:00:00 2021-01-01 00:00:00 2021-01-01 08:00:00+00:00 text varchar 1 day {} \x01
92 t 1 1 1 1 1 1.0 2021-01-01 00:00:00 2021-01-01 00:00:00 2021-01-01 08:00:00+00:00 text varchar 1 day {} \x01
93 t 1 1 1 1 1 1.0 2021-01-01 00:00:00 2021-01-01 00:00:00 2021-01-01 08:00:00+00:00 text varchar 1 day {} \x01
94 t 1 1 1 1 1 1.0 2021-01-01 00:00:00 2021-01-01 00:00:00 2021-01-01 08:00:00+00:00 text varchar 1 day {} \x01
95 t 1 1 1 1 1 1.0 2021-01-01 00:00:00 2021-01-01 00:00:00 2021-01-01 08:00:00+00:00 text varchar 1 day {} \x01
96 t 1 1 1 1 1 1.0 2021-01-01 00:00:00 2021-01-01 00:00:00 2021-01-01 08:00:00+00:00 text varchar 1 day {} \x01
97 t 1 1 1 1 1 1.0 2021-01-01 00:00:00 2021-01-01 00:00:00 2021-01-01 08:00:00+00:00 text varchar 1 day {} \x01
98 t 1 1 1 1 1 1.0 2021-01-01 00:00:00 2021-01-01 00:00:00 2021-01-01 08:00:00+00:00 text varchar 1 day {} \x01
99 t 1 1 1 1 1 1.0 2021-01-01 00:00:00 2021-01-01 00:00:00 2021-01-01 08:00:00+00:00 text varchar 1 day {} \x01
100 t 1 1 1 1 1 1.0 2021-01-01 00:00:00 2021-01-01 00:00:00 2021-01-01 08:00:00+00:00 text varchar 1 day {} \x01

# Test numeric256 types
# Note: We use VARCHAR to store large 256-bit values because PostgreSQL NUMERIC 
# values larger than ~28 digits cannot be deserialized into rust_decimal
system ok
PGDATABASE=source_test psql -c "
CREATE TABLE test_numeric256 (
    id bigint primary key,
    int256_val varchar,
    uint256_val varchar,
    description text
);"

system ok
PGDATABASE=source_test psql -c "
INSERT INTO test_numeric256 VALUES
    (1, '0', '0', 'zeros'),
    (2, '123456789012345678901234567890', '123456789012345678901234567890', 'normal'),
    (3, '-123456789012345678901234567890', NULL, 'negative int256'),
    (4, '57896044618658097711785492504343953926634992332820282019728792003956564819967', '115792089237316195423570985008687907853269984665640564039457584007913129639935', 'max values');
"

query ITTT
select id, int256_val::rw_int256, uint256_val::rw_uint256, description
from postgres_query('$PGHOST', '$PGPORT', '$PGUSER', '$PGPASSWORD', 'source_test', 'select * from test_numeric256 order by id;');
----
1 0 0 zeros
2 123456789012345678901234567890 123456789012345678901234567890 normal
3 -123456789012345678901234567890 NULL negative int256
4 57896044618658097711785492504343953926634992332820282019728792003956564819967 115792089237316195423570985008687907853269984665640564039457584007913129639935 max values

statement ok
drop source postgres_cdc_source;

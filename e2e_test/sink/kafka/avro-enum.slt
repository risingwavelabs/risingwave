# Test Avro enum support for varchar fields
control substitution on

statement ok
set sink_decouple = false;

# cleanup
system ok
rpk topic delete 'test-rw-sink-enum-basic' || true; \
(rpk sr subject delete 'test-rw-sink-enum-basic-value' && rpk sr subject delete 'test-rw-sink-enum-basic-value' --permanent) || true;

# ===== Test 1: Basic Enum Support =====
system ok
rpk topic create test-rw-sink-enum-basic

system ok
sr_register test-rw-sink-enum-basic-value AVRO << EOF
{
  "type": "record",
  "name": "BasicEnum",
  "fields": [
    {
      "name": "id",
      "type": "int"
    },
    {
      "name": "status",
      "type": {
        "type": "enum",
        "name": "Status",
        "symbols": ["ACTIVE", "INACTIVE", "PENDING"]
      }
    }
  ]
}
EOF

statement ok
create table t_basic_enum(
  id int,
  status varchar
);

statement ok
create sink sink_basic_enum from t_basic_enum with (
  ${RISEDEV_KAFKA_WITH_OPTIONS_COMMON},
  topic = 'test-rw-sink-enum-basic'
) format plain encode avro (
  schema.registry = '${RISEDEV_SCHEMA_REGISTRY_URL}',
  force_append_only = 'true'
);

statement ok
create table from_basic_enum with (
  ${RISEDEV_KAFKA_WITH_OPTIONS_COMMON},
  topic = 'test-rw-sink-enum-basic'
) format plain encode avro (
  schema.registry = '${RISEDEV_SCHEMA_REGISTRY_URL}'
);

statement ok
insert into t_basic_enum values
  (1, 'ACTIVE'),
  (2, 'INACTIVE'),
  (3, 'PENDING');

sleep 5s

query IT retry 5 backoff 1s
select * from from_basic_enum order by id;
----
1 ACTIVE
2 INACTIVE
3 PENDING

# ===== Test 2: Nullable Enum =====
system ok
rpk topic delete 'test-rw-sink-enum-nullable' || true; \
(rpk sr subject delete 'test-rw-sink-enum-nullable-value' && rpk sr subject delete 'test-rw-sink-enum-nullable-value' --permanent) || true;

system ok
rpk topic create test-rw-sink-enum-nullable

system ok
sr_register test-rw-sink-enum-nullable-value AVRO << EOF
{
  "type": "record",
  "name": "NullableEnum",
  "fields": [
    {
      "name": "id",
      "type": "int"
    },
    {
      "name": "status",
      "type": [
        "null",
        {
          "type": "enum",
          "name": "Status",
          "symbols": ["DRAFT", "PUBLISHED"]
        }
      ]
    }
  ]
}
EOF

statement ok
create table t_nullable_enum(
  id int,
  status varchar
);

statement ok
create sink sink_nullable_enum from t_nullable_enum with (
  ${RISEDEV_KAFKA_WITH_OPTIONS_COMMON},
  topic = 'test-rw-sink-enum-nullable'
) format plain encode avro (
  schema.registry = '${RISEDEV_SCHEMA_REGISTRY_URL}',
  force_append_only = 'true'
);

statement ok
create table from_nullable_enum with (
  ${RISEDEV_KAFKA_WITH_OPTIONS_COMMON},
  topic = 'test-rw-sink-enum-nullable'
) format plain encode avro (
  schema.registry = '${RISEDEV_SCHEMA_REGISTRY_URL}'
);

statement ok
insert into t_nullable_enum values
  (1, 'DRAFT'),
  (2, null);

sleep 3s

query IT retry 5 backoff 1s
select * from from_nullable_enum order by id;
----
1 DRAFT
2 NULL

# ===== Test 3: Illegal Enum Value Handling =====
statement ok
insert into t_basic_enum values (5, 'INVALID_STATUS');

sleep 5s

# Should still only show the valid enum values
query IT retry 5 backoff 1s
select * from from_basic_enum order by id;
----
1 ACTIVE
2 INACTIVE
3 PENDING

statement ok
insert into t_basic_enum values
  (6, 'ACTIVE'),
  (7, 'INACTIVE'),
  (8, 'INVALID_STATUS');

sleep 5s

# Should still only show the valid enum values
query IT retry 5 backoff 1s
select * from from_basic_enum order by id;
----
1 ACTIVE
2 INACTIVE
3 PENDING

# ===== Cleanup =====
system ok
rpk topic delete 'test-rw-sink-enum-basic' || true; \
(rpk sr subject delete 'test-rw-sink-enum-basic-value' && rpk sr subject delete 'test-rw-sink-enum-basic-value' --permanent) || true;

system ok
rpk topic delete 'test-rw-sink-enum-nullable' || true; \
(rpk sr subject delete 'test-rw-sink-enum-nullable-value' && rpk sr subject delete 'test-rw-sink-enum-nullable-value' --permanent) || true;

statement ok
drop sink sink_basic_enum;

statement ok
drop sink sink_nullable_enum;

statement ok
drop table t_basic_enum;

statement ok
drop table t_nullable_enum;

statement ok
drop table from_basic_enum;

statement ok
drop table from_nullable_enum;

statement ok
set sink_decouple to default;
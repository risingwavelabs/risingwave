statement ok
set sink_decouple = false;

system ok
rpk topic create test-rw-sink-append-only-protobuf

statement ok
create table from_kafka with (
  connector = 'kafka',
  topic = 'test-rw-sink-append-only-protobuf',
  properties.bootstrap.server = 'message_queue:29092')
format plain encode protobuf (
  schema.location = 'file:///risingwave/src/connector/codec/tests/test_data/all-types.pb',
  message = 'all_types.AllTypes');

system ok
rpk topic create test-rw-sink-append-only-protobuf-csr-a

system ok
sr_register 'test-rw-sink-append-only-protobuf-csr-a-value' PROTOBUF < src/connector/src/test_data/test-index-array.proto

statement ok
create table from_kafka_csr_trivial with (
  connector = 'kafka',
  topic = 'test-rw-sink-append-only-protobuf-csr-a',
  properties.bootstrap.server = 'message_queue:29092')
format plain encode protobuf (
  schema.registry = 'http://schemaregistry:8082',
  message = 'test.package.MessageA');

system ok
rpk topic create test-rw-sink-append-only-protobuf-csr-hi

system ok
sr_register 'test-rw-sink-append-only-protobuf-csr-hi-value' PROTOBUF < src/connector/src/test_data/test-index-array.proto

statement ok
create table from_kafka_csr_nested with (
  connector = 'kafka',
  topic = 'test-rw-sink-append-only-protobuf-csr-hi',
  properties.bootstrap.server = 'message_queue:29092')
format plain encode protobuf (
  schema.registry = 'http://schemaregistry:8082',
  message = 'test.package.MessageH.MessageI');

system ok
rpk topic create test-rw-sink-upsert-protobuf

statement ok
create table from_kafka_raw (kafka_value bytea)
include key as kafka_key
with (
  connector = 'kafka',
  topic = 'test-rw-sink-upsert-protobuf',
  properties.bootstrap.server = 'message_queue:29092')
format plain encode bytes;

statement ok
create table into_kafka (
  bool_field bool,
  string_field varchar,
  bytes_field bytea,
  float_field real,
  double_field double precision,
  int32_field int,
  int64_field bigint,
  sint32_field int,
  sint64_field bigint,
  sfixed32_field int,
  sfixed64_field bigint,
  nested_message_field struct<id int, name varchar>,
  repeated_int_field int[],
  timestamp_field timestamptz,
  enum_field varchar,
  oneof_int32 int);

statement ok
insert into into_kafka values
  (true, 'Rising', 'a0', 3.5, 4.25, 22, 23, 24, null, 26, 27, row(1, ''), array[4, 0, 4], '2006-01-02 15:04:05-07:00', null, 42),
  (false, 'Wave', 'ZDF', 1.5, null, 11, 12, 13, 14, 15, 16, row(4, 'foo'), null, null, 'OPTION2', null);

statement ok
flush;

statement ok
create sink sink0 from into_kafka with (
  connector = 'kafka',
  topic = 'test-rw-sink-append-only-protobuf',
  properties.bootstrap.server = 'message_queue:29092')
format plain encode protobuf (
  force_append_only = true,
  schema.location = 'file:///risingwave/src/connector/codec/tests/test_data/all-types.pb',
  message = 'all_types.AllTypes');

statement ok
create sink sink_csr_trivial as select string_field as field_a from into_kafka with (
  connector = 'kafka',
  topic = 'test-rw-sink-append-only-protobuf-csr-a',
  properties.bootstrap.server = 'message_queue:29092')
format plain encode protobuf (
  force_append_only = true,
  schema.registry = 'http://schemaregistry:8082',
  message = 'test.package.MessageA');

statement ok
create sink sink_csr_nested as select sint32_field as field_i from into_kafka with (
  connector = 'kafka',
  topic = 'test-rw-sink-append-only-protobuf-csr-hi',
  properties.bootstrap.server = 'message_queue:29092')
format plain encode protobuf (
  force_append_only = true,
  schema.registry = 'http://schemaregistry:8082',
  message = 'test.package.MessageH.MessageI');

statement error
create sink sink_upsert from into_kafka with (
  connector = 'kafka',
  topic = 'test-rw-sink-upsert-protobuf',
  properties.bootstrap.server = 'message_queue:29092',
  primary_key = 'string_field')
format upsert encode protobuf (
  schema.location = 'file:///risingwave/src/connector/codec/tests/test_data/all-types.pb',
  message = 'all_types.AllTypes');
----
db error: ERROR: Failed to run the query

Caused by these errors (recent errors listed first):
  1: gRPC request to meta service (call `/ddl_service.DdlService/CreateSink`) failed: Internal error
  2: failed to validate sink
  3: config error
  4: sink format/encode/key_encode unsupported: Upsert Protobuf None


statement ok
create sink sink_upsert from into_kafka with (
  connector = 'kafka',
  topic = 'test-rw-sink-upsert-protobuf',
  properties.bootstrap.server = 'message_queue:29092',
  primary_key = 'string_field')
format upsert encode protobuf (
  schema.location = 'file:///risingwave/src/connector/codec/tests/test_data/all-types.pb',
  message = 'all_types.AllTypes')
key encode text;

# Shall be ignored by force_append_only sinks but processed by upsert sinks.
statement ok
delete from into_kafka where bool_field;

sleep 2s

query TTTRRIIIIIITTTI
select
  bool_field,
  string_field,
  bytes_field,
  float_field,
  double_field,
  int32_field,
  int64_field,
  sint32_field,
  sint64_field,
  sfixed32_field,
  sfixed64_field,
  nested_message_field,
  repeated_int_field,
  timestamp_field,
  enum_field,
  oneof_int32 from from_kafka order by string_field;
----
t Rising \x6130   3.5 4.25 22 23 24  0 26 27 (1,"")  {4,0,4} (1136239445,0) DEFAULT 42
f Wave   \x5a4446 1.5 0    11 12 13 14 15 16 (4,foo) {}               (0,0) OPTION2  0

query T
select field_a from from_kafka_csr_trivial order by 1;
----
Rising
Wave

query I
select field_i from from_kafka_csr_nested order by 1;
----
13
24

query T
select convert_from(kafka_key, 'utf-8') from from_kafka_raw where kafka_value is null;
----
Rising

statement error No such file
create sink sink_err from into_kafka with (
  connector = 'kafka',
  topic = 'test-rw-sink-append-only-protobuf',
  properties.bootstrap.server = 'message_queue:29092')
format plain encode protobuf (
  force_append_only = true,
  schema.location = 'file:///risingwave/proto-recursiv',
  message = 'all_types.AllTypes');

statement error field not in proto
create sink sink_err as select 1 as extra_column with (
  connector = 'kafka',
  topic = 'test-rw-sink-append-only-protobuf',
  properties.bootstrap.server = 'message_queue:29092')
format plain encode protobuf (
  force_append_only = true,
  schema.location = 'file:///risingwave/src/connector/codec/tests/test_data/all-types.pb',
  message = 'all_types.AllTypes');

statement error s3 URL not supported yet
create sink sink_err from into_kafka with (
  connector = 'kafka',
  topic = 'test-rw-sink-append-only-protobuf',
  properties.bootstrap.server = 'message_queue:29092')
format plain encode protobuf (
  force_append_only = true,
  schema.location = 's3:///risingwave/src/connector/codec/tests/test_data/all-types.pb',
  message = 'all_types.AllTypes');

statement ok
drop table from_kafka cascade;

statement ok
drop table from_kafka_csr_trivial cascade;

statement ok
drop table from_kafka_csr_nested cascade;

statement ok
drop table from_kafka_raw cascade;

statement ok
drop table into_kafka cascade;

system ok
rpk topic delete test-rw-sink-append-only-protobuf

system ok
rpk topic delete test-rw-sink-append-only-protobuf-csr-a

system ok
rpk topic delete test-rw-sink-append-only-protobuf-csr-hi

system ok
rpk topic delete test-rw-sink-upsert-protobuf

- name: explicit watermark definition + implicit proctime watermark
  sql: |
    create table t (
      foo int,
      event_time timestamp,
      proc_time timestamp as proctime(),
      watermark for event_time as event_time - interval '5 minutes'
    ) append only;
    select * from t;
  expected_outputs:
    - stream_plan
    - eowc_stream_plan
- name: tumble window_start + window_end
  sql: |
    create table t (
      foo int,
      ts timestamp,
      watermark for ts as ts - interval '5 minutes'
    ) append only;
    select
      foo, window_start, window_end
    from tumble(t, ts, interval '1 hour');
  expected_outputs:
    - stream_plan
    - eowc_stream_plan
- name: hop window_start + window_end
  sql: |
    create table t (
      foo int,
      ts timestamp,
      watermark for ts as ts - interval '5 minutes'
    ) append only;
    select
      foo, window_start, window_end
    from hop(t, ts, interval '20 mins', interval '1 hour');
  expected_outputs:
    - stream_plan
    - eowc_stream_plan
- name: join window_start = window_start
  sql: |
    create table t (
      foo int,
      ts timestamp,
      watermark for ts as ts - interval '5 minutes'
    ) append only;
    select
      foo1 + foo2 as foo,
      win1, win2
    from (
      select foo as foo1, window_start as win1 from tumble(t, ts, interval '5 mins')
    )
    join (
      select foo + 1 as foo2, window_start as win2 from tumble(t, ts, interval '10 mins')
    )
    on win1 = win2;
  expected_outputs:
    - stream_plan
    - eowc_stream_plan
- name: join window_start = window_start, shared node
  sql: |
    create table t (
      foo int,
      ts timestamp,
      watermark for ts as ts - interval '5 minutes'
    ) append only;
    with ttt as (
      select * from t
    )
    select
      foo1 + foo2 as foo,
      win1, win2
    from (
      select foo as foo1, window_start as win1 from tumble(ttt, ts, interval '5 mins')
    )
    join (
      select foo + 1 as foo2, window_start as win2 from tumble(ttt, ts, interval '10 mins')
    )
    on win1 = win2;
  expected_outputs:
    - stream_plan
    - eowc_stream_plan
- name: group by tumble window_start + window_end
  sql: |
    create table t (
      foo int,
      ts timestamp,
      watermark for ts as ts - interval '5 minutes'
    ) append only;
    select
      window_start, window_end, count(foo) as count
    from tumble(t, ts, interval '1 hour')
    group by window_start, window_end;
  expected_outputs:
    - stream_plan
    - eowc_stream_plan

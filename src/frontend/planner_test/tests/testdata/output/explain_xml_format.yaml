# This file is automatically generated. See `src/frontend/planner_test/README.md` for more information.
- name: test xml output format (logical)
  sql: |
    CREATE TABLE t (v1 int);
    explain (logical, format xml) SELECT approx_percentile(0.5) WITHIN GROUP (order by v1) from t;
  explain_output: |
    <XmlNode><name>LogicalAgg</name><fields><aggs>approx_percentile($expr1)</aggs></fields><children><name>LogicalProject</name><fields><exprs>t.v1::Float64 as $expr1</exprs></fields><children><name>LogicalScan</name><fields><columns>v1</columns><table>t</table></fields></children></children></XmlNode>
- name: test xml output format (batch)
  sql: |
    CREATE TABLE t (v1 int);
    explain (physical, format xml) SELECT approx_percentile(0.5) WITHIN GROUP (order by v1) from t;
  explain_output: |
    <XmlNode><name>BatchSimpleAgg</name><fields><aggs>approx_percentile($expr1)</aggs></fields><children><name>BatchExchange</name><fields><dist>Single</dist></fields><children><name>BatchProject</name><fields><exprs>t.v1::Float64 as $expr1</exprs></fields><children><name>BatchScan</name><fields><columns>v1</columns><table>t</table></fields></children></children></children></XmlNode>
- name: test xml output format (stream)
  sql: |
    CREATE TABLE t (v1 int);
    explain (physical, format xml) create materialized view m1 as SELECT approx_percentile(0.5) WITHIN GROUP (order by v1) from t;
  explain_output: |
    <XmlNode><name>StreamMaterialize</name><fields><columns>approx_percentile</columns><pk_conflict>NoCheck</pk_conflict></fields><children><name>StreamGlobalApproxPercentile</name><fields><quantile>0.5:Float64</quantile><relative_error>0.01:Float64</relative_error></fields><children><name>StreamExchange</name><fields><dist>Single</dist></fields><children><name>StreamLocalApproxPercentile</name><fields><percentile_col>$expr1</percentile_col><quantile>0.5:Float64</quantile><relative_error>0.01:Float64</relative_error></fields><children><name>StreamProject</name><fields><exprs>t.v1::Float64 as $expr1</exprs><exprs>t._row_id</exprs></fields><children><name>StreamTableScan</name><fields><columns>v1</columns><columns>_row_id</columns><table>t</table></fields></children></children></children></children></children></XmlNode>
- name: test long xml output format (stream)
  sql: |
    create table t1(a int, b int);
    create table t2(c int primary key, d int);
    explain (physical, format xml) create materialized view m1 as SELECT
    COALESCE((SELECT b FROM t2 WHERE t1.a = t2.c), 0) col1,
    COALESCE((SELECT b FROM t2 WHERE t1.a = t2.c), 0) col2,
    COALESCE((SELECT b FROM t2 WHERE t1.a = t2.c), 0) col3,
    COALESCE((SELECT b FROM t2 WHERE t1.a = t2.c), 0) col4,
    COALESCE((SELECT b FROM t2 WHERE t1.a = t2.c), 0) col5,
    COALESCE((SELECT b FROM t2 WHERE t1.a = t2.c), 0) col6,
    COALESCE((SELECT b FROM t2 WHERE t1.a = t2.c), 0) col7,
    COALESCE((SELECT b FROM t2 WHERE t1.a = t2.c), 0) col8,
    COALESCE((SELECT b FROM t2 WHERE t1.a = t2.c), 0) col9,
    COALESCE((SELECT b FROM t2 WHERE t1.a = t2.c), 0) col10,
    COALESCE((SELECT b FROM t2 WHERE t1.a = t2.c), 0) col11,
    COALESCE((SELECT b FROM t2 WHERE t1.a = t2.c), 0) col12,
    COALESCE((SELECT b FROM t2 WHERE t1.a = t2.c), 0) col13,
    COALESCE((SELECT b FROM t2 WHERE t1.a = t2.c), 0) col14,
    COALESCE((SELECT b FROM t2 WHERE t1.a = t2.c), 0) col15,
    COALESCE((SELECT b FROM t2 WHERE t1.a = t2.c), 0) col16,
    COALESCE((SELECT b FROM t2 WHERE t1.a = t2.c), 0) col17,
    COALESCE((SELECT b FROM t2 WHERE t1.a = t2.c), 0) col18
    from t1;
  explain_output: |
    <XmlNode><name>StreamMaterialize</name><fields><columns>col1</columns><columns>col2</columns><columns>col3</columns><columns>col4</columns><columns>col5</columns><columns>col6</columns><columns>col7</columns><columns>col8</columns><columns>col9</columns><columns>col10</columns><columns>col11</columns><columns>col12</columns><columns>col13</columns><columns>col14</columns><columns>col15</columns><columns>col16</columns><columns>col17</columns><columns>col18</columns><columns>t1._row_id(hidden)</columns><columns>t1.b(hidden)</columns><columns>t1.a(hidden)</columns><columns>t1.b#1(hidden)</columns><columns>t1.b#2(hidden)</columns><columns>t1.a#1(hidden)</columns><columns>t1.b#3(hidden)</columns><columns>t1.b#4(hidden)</columns><columns>t1.a#2(hidden)</columns><columns>t1.b#5(hidden)</columns><columns>t1.b#6(hidden)</columns><columns>t1.a#3(hidden)</columns><columns>t1.b#7(hidden)</columns><columns>t1.b#8(hidden)</columns><columns>t1.a#4(hidden)</columns><columns>t1.b#9(hidden)</columns><columns>t1.b#10(hidden)</columns><columns>t1.a#5(hidden)</columns><columns>t1.b#11(hidden)</columns><columns>t1.b#12(hidden)</columns><columns>t1.a#6(hidden)</columns><columns>t1.b#13(hidden)</columns><columns>t1.b#14(hidden)</columns><columns>t1.a#7(hidden)</columns><columns>t1.b#15(hidden)</columns><columns>t1.b#16(hidden)</columns><columns>t1.a#8(hidden)</columns><columns>t1.b#17(hidden)</columns><columns>t1.b#18(hidden)</columns><columns>t1.a#9(hidden)</columns><columns>t1.b#19(hidden)</columns><columns>t1.b#20(hidden)</columns><columns>t1.a#10(hidden)</columns><columns>t1.b#21(hidden)</columns><columns>t1.b#22(hidden)</columns><columns>t1.a#11(hidden)</columns><columns>t1.b#23(hidden)</columns><columns>t1.b#24(hidden)</columns><columns>t1.a#12(hidden)</columns><columns>t1.b#25(hidden)</columns><columns>t1.b#26(hidden)</columns><columns>t1.a#13(hidden)</columns><columns>t1.b#27(hidden)</columns><columns>t1.b#28(hidden)</columns><columns>t1.a#14(hidden)</columns><columns>t1.b#29(hidden)</columns><columns>t1.b#30(hidden)</columns><columns>t1.a#15(hidden)</columns><columns>t1.b#31(hidden)</columns><columns>t1.b#32(hidden)</columns><columns>t1.a#16(hidden)</columns><columns>t1.b#33(hidden)</columns><columns>t1.b#34(hidden)</columns><columns>t1.a#17(hidden)</columns><columns>t1.b#35(hidden)</columns><pk_columns>t1._row_id</pk_columns><pk_columns>t1.b</pk_columns><pk_columns>t1.a</pk_columns><pk_columns>t1.b#1</pk_columns><pk_columns>t1.b#2</pk_columns><pk_columns>t1.a#1</pk_columns><pk_columns>t1.b#3</pk_columns><pk_columns>t1.b#4</pk_columns><pk_columns>t1.a#2</pk_columns><pk_columns>t1.b#5</pk_columns><pk_columns>t1.b#6</pk_columns><pk_columns>t1.a#3</pk_columns><pk_columns>t1.b#7</pk_columns><pk_columns>t1.b#8</pk_columns><pk_columns>t1.a#4</pk_columns><pk_columns>t1.b#9</pk_columns><pk_columns>t1.b#10</pk_columns><pk_columns>t1.a#5</pk_columns><pk_columns>t1.b#11</pk_columns><pk_columns>t1.b#12</pk_columns><pk_columns>t1.a#6</pk_columns><pk_columns>t1.b#13</pk_columns><pk_columns>t1.b#14</pk_columns><pk_columns>t1.a#7</pk_columns><pk_columns>t1.b#15</pk_columns><pk_columns>t1.b#16</pk_columns><pk_columns>t1.a#8</pk_columns><pk_columns>t1.b#17</pk_columns><pk_columns>t1.b#18</pk_columns><pk_columns>t1.a#9</pk_columns><pk_columns>t1.b#19</pk_columns><pk_columns>t1.b#20</pk_columns><pk_columns>t1.a#10</pk_columns><pk_columns>t1.b#21</pk_columns><pk_columns>t1.b#22</pk_columns><pk_columns>t1.a#11</pk_columns><pk_columns>t1.b#23</pk_columns><pk_columns>t1.b#24</pk_columns><pk_columns>t1.a#12</pk_columns><pk_columns>t1.b#25</pk_columns><pk_columns>t1.b#26</pk_columns><pk_columns>t1.a#13</pk_columns><pk_columns>t1.b#27</pk_columns><pk_columns>t1.b#28</pk_columns><pk_columns>t1.a#14</pk_columns><pk_columns>t1.b#29</pk_columns><pk_columns>t1.b#30</pk_columns><pk_columns>t1.a#15</pk_columns><pk_columns>t1.b#31</pk_columns><pk_columns>t1.b#32</pk_columns><pk_columns>t1.a#16</pk_columns><pk_columns>t1.b#33</pk_columns><pk_columns>t1.b#34</pk_columns><pk_columns>t1.a#17</pk_columns><pk_columns>t1.b#35</pk_columns><pk_conflict>NoCheck</pk_conflict><stream_key>t1._row_id</stream_key><stream_key>t1.b</stream_key><stream_key>t1.a</stream_key><stream_key>t1.b#1</stream_key><stream_key>t1.b#2</stream_key><stream_key>t1.a#1</stream_key><stream_key>t1.b#3</stream_key><stream_key>t1.b#4</stream_key><stream_key>t1.a#2</stream_key><stream_key>t1.b#5</stream_key><stream_key>t1.b#6</stream_key><stream_key>t1.a#3</stream_key><stream_key>t1.b#7</stream_key><stream_key>t1.b#8</stream_key><stream_key>t1.a#4</stream_key><stream_key>t1.b#9</stream_key><stream_key>t1.b#10</stream_key><stream_key>t1.a#5</stream_key><stream_key>t1.b#11</stream_key><stream_key>t1.b#12</stream_key><stream_key>t1.a#6</stream_key><stream_key>t1.b#13</stream_key><stream_key>t1.b#14</stream_key><stream_key>t1.a#7</stream_key><stream_key>t1.b#15</stream_key><stream_key>t1.b#16</stream_key><stream_key>t1.a#8</stream_key><stream_key>t1.b#17</stream_key><stream_key>t1.b#18</stream_key><stream_key>t1.a#9</stream_key><stream_key>t1.b#19</stream_key><stream_key>t1.b#20</stream_key><stream_key>t1.a#10</stream_key><stream_key>t1.b#21</stream_key><stream_key>t1.b#22</stream_key><stream_key>t1.a#11</stream_key><stream_key>t1.b#23</stream_key><stream_key>t1.b#24</stream_key><stream_key>t1.a#12</stream_key><stream_key>t1.b#25</stream_key><stream_key>t1.b#26</stream_key><stream_key>t1.a#13</stream_key><stream_key>t1.b#27</stream_key><stream_key>t1.b#28</stream_key><stream_key>t1.a#14</stream_key><stream_key>t1.b#29</stream_key><stream_key>t1.b#30</stream_key><stream_key>t1.a#15</stream_key><stream_key>t1.b#31</stream_key><stream_key>t1.b#32</stream_key><stream_key>t1.a#16</stream_key><stream_key>t1.b#33</stream_key><stream_key>t1.b#34</stream_key><stream_key>t1.a#17</stream_key><stream_key>t1.b#35</stream_key></fields><children><name>StreamProject</name><fields><exprs>Coalesce(t1.b, 0:Int32) as $expr1</exprs><exprs>Coalesce(t1.b, 0:Int32) as $expr2</exprs><exprs>Coalesce(t1.b, 0:Int32) as $expr3</exprs><exprs>Coalesce(t1.b, 0:Int32) as $expr4</exprs><exprs>Coalesce(t1.b, 0:Int32) as $expr5</exprs><exprs>Coalesce(t1.b, 0:Int32) as $expr6</exprs><exprs>Coalesce(t1.b, 0:Int32) as $expr7</exprs><exprs>Coalesce(t1.b, 0:Int32) as $expr8</exprs><exprs>Coalesce(t1.b, 0:Int32) as $expr9</exprs><exprs>Coalesce(t1.b, 0:Int32) as $expr10</exprs><exprs>Coalesce(t1.b, 0:Int32) as $expr11</exprs><exprs>Coalesce(t1.b, 0:Int32) as $expr12</exprs><exprs>Coalesce(t1.b, 0:Int32) as $expr13</exprs><exprs>Coalesce(t1.b, 0:Int32) as $expr14</exprs><exprs>Coalesce(t1.b, 0:Int32) as $expr15</exprs><exprs>Coalesce(t1.b, 0:Int32) as $expr16</exprs><exprs>Coalesce(t1.b, 0:Int32) as $expr17</exprs><exprs>Coalesce(t1.b, 0:Int32) as $expr18</exprs><exprs>t1._row_id</exprs><exprs>t1.b</exprs><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs><exprs>t1.a</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a IS NOT DISTINCT FROM t1.a AND t1.b IS NOT DISTINCT FROM t1.b</predicate><type>LeftOuter</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a, t1.b)</dist></fields><children><name>StreamTableScan</name><fields><columns>a</columns><columns>b</columns><columns>_row_id</columns><table>t1</table></fields></children></children><children><name>StreamExchange</name><fields><dist>HashShard(t1.a, t1.b)</dist></fields><children><name>StreamFilter</name><fields><predicate>((((((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b)))) OR (((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.b) OR IsNotNull(t1.a))))) OR ((((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b)))) OR (((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.b) OR IsNotNull(t1.a))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b)))))) OR (((((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.b) OR IsNotNull(t1.a)))) OR (((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b))))) OR (((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.b) OR IsNotNull(t1.a))) OR IsNotNull(t1.b))))</predicate></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a IS NOT DISTINCT FROM t1.a AND t1.b IS NOT DISTINCT FROM t1.b</predicate><type>FullOuter</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamFilter</name><fields><predicate>((((((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b)))) OR (((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.b) OR IsNotNull(t1.a))))) OR ((((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b)))) OR (((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.b) OR IsNotNull(t1.a))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b)))))) OR (((((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.b) OR IsNotNull(t1.a)))) OR (((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b))))) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))))</predicate></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a IS NOT DISTINCT FROM t1.a AND t1.b IS NOT DISTINCT FROM t1.b</predicate><type>FullOuter</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamFilter</name><fields><predicate>((((((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b)))) OR (((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.b) OR IsNotNull(t1.a))))) OR ((((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b)))) OR (((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.b) OR IsNotNull(t1.a))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b)))))) OR ((((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.b) OR IsNotNull(t1.a)))) OR (((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR IsNotNull(t1.b)))))</predicate></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a IS NOT DISTINCT FROM t1.a AND t1.b IS NOT DISTINCT FROM t1.b</predicate><type>FullOuter</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamFilter</name><fields><predicate>((((((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b)))) OR (((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.b) OR IsNotNull(t1.a))))) OR ((((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b)))) OR (((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.b) OR IsNotNull(t1.a))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b)))))) OR ((((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.b) OR IsNotNull(t1.a)))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b)))))</predicate></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a IS NOT DISTINCT FROM t1.a AND t1.b IS NOT DISTINCT FROM t1.b</predicate><type>FullOuter</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamFilter</name><fields><predicate>((((((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b)))) OR (((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.b) OR IsNotNull(t1.a))))) OR ((((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b)))) OR (((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.b) OR IsNotNull(t1.a))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b)))))) OR ((((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.b) OR IsNotNull(t1.a)))) OR IsNotNull(t1.b)))</predicate></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a IS NOT DISTINCT FROM t1.a AND t1.b IS NOT DISTINCT FROM t1.b</predicate><type>FullOuter</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamFilter</name><fields><predicate>((((((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b)))) OR (((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.b) OR IsNotNull(t1.a))))) OR ((((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b)))) OR (((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.b) OR IsNotNull(t1.a))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b)))))) OR (((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b))) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))))</predicate></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a IS NOT DISTINCT FROM t1.a AND t1.b IS NOT DISTINCT FROM t1.b</predicate><type>FullOuter</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamFilter</name><fields><predicate>((((((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b)))) OR (((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.b) OR IsNotNull(t1.a))))) OR ((((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b)))) OR (((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.b) OR IsNotNull(t1.a))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b)))))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR IsNotNull(t1.b)))</predicate></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a IS NOT DISTINCT FROM t1.a AND t1.b IS NOT DISTINCT FROM t1.b</predicate><type>FullOuter</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamFilter</name><fields><predicate>(((((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b)))) OR (((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.b) OR IsNotNull(t1.a))))) OR ((((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b)))) OR (((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.b) OR IsNotNull(t1.a))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))))))</predicate></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a IS NOT DISTINCT FROM t1.a AND t1.b IS NOT DISTINCT FROM t1.b</predicate><type>FullOuter</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamFilter</name><fields><predicate>(((((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b)))) OR (((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.b) OR IsNotNull(t1.a))))) OR ((((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b)))) OR (((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.b) OR IsNotNull(t1.a))) OR IsNotNull(t1.b))))</predicate></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a IS NOT DISTINCT FROM t1.a AND t1.b IS NOT DISTINCT FROM t1.b</predicate><type>FullOuter</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamFilter</name><fields><predicate>(((((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b)))) OR (((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.b) OR IsNotNull(t1.a))))) OR ((((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b)))) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))))</predicate></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a IS NOT DISTINCT FROM t1.a AND t1.b IS NOT DISTINCT FROM t1.b</predicate><type>FullOuter</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamFilter</name><fields><predicate>(((((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b)))) OR (((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.b) OR IsNotNull(t1.a))))) OR (((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR IsNotNull(t1.b))))</predicate></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a IS NOT DISTINCT FROM t1.a AND t1.b IS NOT DISTINCT FROM t1.b</predicate><type>FullOuter</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamFilter</name><fields><predicate>(((((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b)))) OR (((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.b) OR IsNotNull(t1.a))))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))))</predicate></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a IS NOT DISTINCT FROM t1.a AND t1.b IS NOT DISTINCT FROM t1.b</predicate><type>FullOuter</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamFilter</name><fields><predicate>(((((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b)))) OR (((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.b) OR IsNotNull(t1.a))))) OR IsNotNull(t1.b))</predicate></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a IS NOT DISTINCT FROM t1.a AND t1.b IS NOT DISTINCT FROM t1.b</predicate><type>FullOuter</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamFilter</name><fields><predicate>((((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b)))) OR (((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR (IsNotNull(t1.b) OR IsNotNull(t1.b))) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))))</predicate></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a IS NOT DISTINCT FROM t1.a AND t1.b IS NOT DISTINCT FROM t1.b</predicate><type>FullOuter</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamFilter</name><fields><predicate>((((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b)))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.a)) OR IsNotNull(t1.b)))</predicate></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a IS NOT DISTINCT FROM t1.a AND t1.b IS NOT DISTINCT FROM t1.b</predicate><type>FullOuter</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamFilter</name><fields><predicate>(((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))) OR ((IsNotNull(t1.b) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b))))</predicate></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a IS NOT DISTINCT FROM t1.a AND t1.b IS NOT DISTINCT FROM t1.b</predicate><type>FullOuter</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamFilter</name><fields><predicate>((IsNotNull(t1.a) OR IsNotNull(t1.b)) OR (IsNotNull(t1.a) OR IsNotNull(t1.b)))</predicate></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a IS NOT DISTINCT FROM t1.a AND t1.b IS NOT DISTINCT FROM t1.b</predicate><type>FullOuter</type></fields><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a = t2.c</predicate><type>Inner</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashAgg</name><fields><aggs>count</aggs><group_key>t1.a</group_key><group_key>t1.b</group_key></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a, t1.b)</dist></fields><children><name>StreamTableScan</name><fields><columns>a</columns><columns>b</columns><columns>_row_id</columns><table>t1</table></fields></children></children></children></children></children><children><name>StreamExchange</name><fields><dist>HashShard(t2.c)</dist></fields><children><name>StreamTableScan</name><fields><columns>c</columns><table>t2</table></fields></children></children></children></children><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a = t2.c</predicate><type>Inner</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashAgg</name><fields><aggs>count</aggs><group_key>t1.a</group_key><group_key>t1.b</group_key></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a, t1.b)</dist></fields><children><name>StreamTableScan</name><fields><columns>a</columns><columns>b</columns><columns>_row_id</columns><table>t1</table></fields></children></children></children></children></children><children><name>StreamExchange</name><fields><dist>HashShard(t2.c)</dist></fields><children><name>StreamTableScan</name><fields><columns>c</columns><table>t2</table></fields></children></children></children></children></children></children></children><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a = t2.c</predicate><type>Inner</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashAgg</name><fields><aggs>count</aggs><group_key>t1.a</group_key><group_key>t1.b</group_key></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a, t1.b)</dist></fields><children><name>StreamTableScan</name><fields><columns>a</columns><columns>b</columns><columns>_row_id</columns><table>t1</table></fields></children></children></children></children></children><children><name>StreamExchange</name><fields><dist>HashShard(t2.c)</dist></fields><children><name>StreamTableScan</name><fields><columns>c</columns><table>t2</table></fields></children></children></children></children></children></children></children><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a = t2.c</predicate><type>Inner</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashAgg</name><fields><aggs>count</aggs><group_key>t1.a</group_key><group_key>t1.b</group_key></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a, t1.b)</dist></fields><children><name>StreamTableScan</name><fields><columns>a</columns><columns>b</columns><columns>_row_id</columns><table>t1</table></fields></children></children></children></children></children><children><name>StreamExchange</name><fields><dist>HashShard(t2.c)</dist></fields><children><name>StreamTableScan</name><fields><columns>c</columns><table>t2</table></fields></children></children></children></children></children></children></children><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a = t2.c</predicate><type>Inner</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashAgg</name><fields><aggs>count</aggs><group_key>t1.a</group_key><group_key>t1.b</group_key></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a, t1.b)</dist></fields><children><name>StreamTableScan</name><fields><columns>a</columns><columns>b</columns><columns>_row_id</columns><table>t1</table></fields></children></children></children></children></children><children><name>StreamExchange</name><fields><dist>HashShard(t2.c)</dist></fields><children><name>StreamTableScan</name><fields><columns>c</columns><table>t2</table></fields></children></children></children></children></children></children></children><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a = t2.c</predicate><type>Inner</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashAgg</name><fields><aggs>count</aggs><group_key>t1.a</group_key><group_key>t1.b</group_key></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a, t1.b)</dist></fields><children><name>StreamTableScan</name><fields><columns>a</columns><columns>b</columns><columns>_row_id</columns><table>t1</table></fields></children></children></children></children></children><children><name>StreamExchange</name><fields><dist>HashShard(t2.c)</dist></fields><children><name>StreamTableScan</name><fields><columns>c</columns><table>t2</table></fields></children></children></children></children></children></children></children><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a = t2.c</predicate><type>Inner</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashAgg</name><fields><aggs>count</aggs><group_key>t1.a</group_key><group_key>t1.b</group_key></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a, t1.b)</dist></fields><children><name>StreamTableScan</name><fields><columns>a</columns><columns>b</columns><columns>_row_id</columns><table>t1</table></fields></children></children></children></children></children><children><name>StreamExchange</name><fields><dist>HashShard(t2.c)</dist></fields><children><name>StreamTableScan</name><fields><columns>c</columns><table>t2</table></fields></children></children></children></children></children></children></children><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a = t2.c</predicate><type>Inner</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashAgg</name><fields><aggs>count</aggs><group_key>t1.a</group_key><group_key>t1.b</group_key></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a, t1.b)</dist></fields><children><name>StreamTableScan</name><fields><columns>a</columns><columns>b</columns><columns>_row_id</columns><table>t1</table></fields></children></children></children></children></children><children><name>StreamExchange</name><fields><dist>HashShard(t2.c)</dist></fields><children><name>StreamTableScan</name><fields><columns>c</columns><table>t2</table></fields></children></children></children></children></children></children></children><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a = t2.c</predicate><type>Inner</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashAgg</name><fields><aggs>count</aggs><group_key>t1.a</group_key><group_key>t1.b</group_key></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a, t1.b)</dist></fields><children><name>StreamTableScan</name><fields><columns>a</columns><columns>b</columns><columns>_row_id</columns><table>t1</table></fields></children></children></children></children></children><children><name>StreamExchange</name><fields><dist>HashShard(t2.c)</dist></fields><children><name>StreamTableScan</name><fields><columns>c</columns><table>t2</table></fields></children></children></children></children></children></children></children><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a = t2.c</predicate><type>Inner</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashAgg</name><fields><aggs>count</aggs><group_key>t1.a</group_key><group_key>t1.b</group_key></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a, t1.b)</dist></fields><children><name>StreamTableScan</name><fields><columns>a</columns><columns>b</columns><columns>_row_id</columns><table>t1</table></fields></children></children></children></children></children><children><name>StreamExchange</name><fields><dist>HashShard(t2.c)</dist></fields><children><name>StreamTableScan</name><fields><columns>c</columns><table>t2</table></fields></children></children></children></children></children></children></children><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a = t2.c</predicate><type>Inner</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashAgg</name><fields><aggs>count</aggs><group_key>t1.a</group_key><group_key>t1.b</group_key></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a, t1.b)</dist></fields><children><name>StreamTableScan</name><fields><columns>a</columns><columns>b</columns><columns>_row_id</columns><table>t1</table></fields></children></children></children></children></children><children><name>StreamExchange</name><fields><dist>HashShard(t2.c)</dist></fields><children><name>StreamTableScan</name><fields><columns>c</columns><table>t2</table></fields></children></children></children></children></children></children></children><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a = t2.c</predicate><type>Inner</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashAgg</name><fields><aggs>count</aggs><group_key>t1.a</group_key><group_key>t1.b</group_key></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a, t1.b)</dist></fields><children><name>StreamTableScan</name><fields><columns>a</columns><columns>b</columns><columns>_row_id</columns><table>t1</table></fields></children></children></children></children></children><children><name>StreamExchange</name><fields><dist>HashShard(t2.c)</dist></fields><children><name>StreamTableScan</name><fields><columns>c</columns><table>t2</table></fields></children></children></children></children></children></children></children><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a = t2.c</predicate><type>Inner</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashAgg</name><fields><aggs>count</aggs><group_key>t1.a</group_key><group_key>t1.b</group_key></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a, t1.b)</dist></fields><children><name>StreamTableScan</name><fields><columns>a</columns><columns>b</columns><columns>_row_id</columns><table>t1</table></fields></children></children></children></children></children><children><name>StreamExchange</name><fields><dist>HashShard(t2.c)</dist></fields><children><name>StreamTableScan</name><fields><columns>c</columns><table>t2</table></fields></children></children></children></children></children></children></children><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a = t2.c</predicate><type>Inner</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashAgg</name><fields><aggs>count</aggs><group_key>t1.a</group_key><group_key>t1.b</group_key></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a, t1.b)</dist></fields><children><name>StreamTableScan</name><fields><columns>a</columns><columns>b</columns><columns>_row_id</columns><table>t1</table></fields></children></children></children></children></children><children><name>StreamExchange</name><fields><dist>HashShard(t2.c)</dist></fields><children><name>StreamTableScan</name><fields><columns>c</columns><table>t2</table></fields></children></children></children></children></children></children></children><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a = t2.c</predicate><type>Inner</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashAgg</name><fields><aggs>count</aggs><group_key>t1.a</group_key><group_key>t1.b</group_key></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a, t1.b)</dist></fields><children><name>StreamTableScan</name><fields><columns>a</columns><columns>b</columns><columns>_row_id</columns><table>t1</table></fields></children></children></children></children></children><children><name>StreamExchange</name><fields><dist>HashShard(t2.c)</dist></fields><children><name>StreamTableScan</name><fields><columns>c</columns><table>t2</table></fields></children></children></children></children></children></children></children><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a = t2.c</predicate><type>Inner</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashAgg</name><fields><aggs>count</aggs><group_key>t1.a</group_key><group_key>t1.b</group_key></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a, t1.b)</dist></fields><children><name>StreamTableScan</name><fields><columns>a</columns><columns>b</columns><columns>_row_id</columns><table>t1</table></fields></children></children></children></children></children><children><name>StreamExchange</name><fields><dist>HashShard(t2.c)</dist></fields><children><name>StreamTableScan</name><fields><columns>c</columns><table>t2</table></fields></children></children></children></children></children></children></children><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a = t2.c</predicate><type>Inner</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashAgg</name><fields><aggs>count</aggs><group_key>t1.a</group_key><group_key>t1.b</group_key></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a, t1.b)</dist></fields><children><name>StreamTableScan</name><fields><columns>a</columns><columns>b</columns><columns>_row_id</columns><table>t1</table></fields></children></children></children></children></children><children><name>StreamExchange</name><fields><dist>HashShard(t2.c)</dist></fields><children><name>StreamTableScan</name><fields><columns>c</columns><table>t2</table></fields></children></children></children></children></children></children></children><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashJoin</name><fields><predicate>t1.a = t2.c</predicate><type>Inner</type></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a)</dist></fields><children><name>StreamProject</name><fields><exprs>t1.a</exprs><exprs>t1.b</exprs></fields><children><name>StreamHashAgg</name><fields><aggs>count</aggs><group_key>t1.a</group_key><group_key>t1.b</group_key></fields><children><name>StreamExchange</name><fields><dist>HashShard(t1.a, t1.b)</dist></fields><children><name>StreamTableScan</name><fields><columns>a</columns><columns>b</columns><columns>_row_id</columns><table>t1</table></fields></children></children></children></children></children><children><name>StreamExchange</name><fields><dist>HashShard(t2.c)</dist></fields><children><name>StreamTableScan</name><fields><columns>c</columns><table>t2</table></fields></children></children></children></children></children></children></children></children></children></XmlNode>

# This file is automatically generated. See `src/frontend/planner_test/README.md` for more information.
- id: create_tables
  sql: |
    /* T: UpstreamHash(row_id); Tk: UpstreamHash(k); S: single distribution */
    create table T  (k int, v int, o int, s varchar);
    create index Tk on T(k) include(k, v, o, s);
    create materialized view S as select * from T order by o limit 100;
- id: agg_on_single
  before:
  - create_tables
  sql: |
    select max(v) as a1 from S;
  batch_plan: |-
    BatchExchange { order: [], dist: Single }
    └─BatchSimpleAgg { aggs: [max(s.v)] }
      └─BatchScan { table: s, columns: [s.v], distribution: Single }
  batch_local_plan: |-
    BatchSimpleAgg { aggs: [max(s.v)] }
    └─BatchExchange { order: [], dist: Single }
      └─BatchScan { table: s, columns: [s.v], distribution: SomeShard }
- id: extreme_on_T
  before:
  - create_tables
  sql: |
    select max(v) as a1 from T;
  batch_plan: |-
    BatchSimpleAgg { aggs: [max(max(t.v))] }
    └─BatchExchange { order: [], dist: Single }
      └─BatchSimpleAgg { aggs: [max(t.v)] }
        └─BatchScan { table: t, columns: [t.v], distribution: SomeShard }
  batch_local_plan: |-
    BatchSimpleAgg { aggs: [max(t.v)] }
    └─BatchExchange { order: [], dist: Single }
      └─BatchScan { table: t, columns: [t.v], distribution: SomeShard }
- id: sum_on_T
  before:
  - create_tables
  sql: |
    select sum(v) as a1 from T;
  batch_plan: |-
    BatchSimpleAgg { aggs: [sum(sum(t.v))] }
    └─BatchExchange { order: [], dist: Single }
      └─BatchSimpleAgg { aggs: [sum(t.v)] }
        └─BatchScan { table: t, columns: [t.v], distribution: SomeShard }
  batch_local_plan: |-
    BatchSimpleAgg { aggs: [sum(t.v)] }
    └─BatchExchange { order: [], dist: Single }
      └─BatchScan { table: t, columns: [t.v], distribution: SomeShard }
- id: cnt_on_T
  before:
  - create_tables
  sql: |
    select count(v) as a1 from T;
  batch_plan: |-
    BatchSimpleAgg { aggs: [sum0(count(t.v))] }
    └─BatchExchange { order: [], dist: Single }
      └─BatchSimpleAgg { aggs: [count(t.v)] }
        └─BatchScan { table: t, columns: [t.v], distribution: SomeShard }
  batch_local_plan: |-
    BatchSimpleAgg { aggs: [count(t.v)] }
    └─BatchExchange { order: [], dist: Single }
      └─BatchScan { table: t, columns: [t.v], distribution: SomeShard }
- id: string_agg_on_T
  before:
  - create_tables
  sql: |
    select string_agg(s, ',' order by o) as a1 from T;
  batch_plan: |-
    BatchSimpleAgg { aggs: [string_agg(t.s, ',':Varchar order_by(t.o ASC))] }
    └─BatchExchange { order: [], dist: Single }
      └─BatchProject { exprs: [t.s, ',':Varchar, t.o] }
        └─BatchScan { table: t, columns: [t.o, t.s], distribution: SomeShard }
  batch_local_plan: |-
    BatchSimpleAgg { aggs: [string_agg(t.s, ',':Varchar order_by(t.o ASC))] }
    └─BatchExchange { order: [], dist: Single }
      └─BatchProject { exprs: [t.s, ',':Varchar, t.o] }
        └─BatchScan { table: t, columns: [t.o, t.s], distribution: SomeShard }
- id: extreme_count_on_T
  before:
  - create_tables
  sql: |
    select max(v) as a1, count(v) as a2 from T;
  batch_plan: |-
    BatchSimpleAgg { aggs: [max(max(t.v)), sum0(count(t.v))] }
    └─BatchExchange { order: [], dist: Single }
      └─BatchSimpleAgg { aggs: [max(t.v), count(t.v)] }
        └─BatchScan { table: t, columns: [t.v], distribution: SomeShard }
  batch_local_plan: |-
    BatchSimpleAgg { aggs: [max(t.v), count(t.v)] }
    └─BatchExchange { order: [], dist: Single }
      └─BatchScan { table: t, columns: [t.v], distribution: SomeShard }
- id: count_string_agg_on_T
  before:
  - create_tables
  sql: |
    select count(v) as a1, string_agg(s, ',' order by o) as a2 from T;
  batch_plan: |-
    BatchSimpleAgg { aggs: [count(t.v), string_agg(t.s, ',':Varchar order_by(t.o ASC))] }
    └─BatchExchange { order: [], dist: Single }
      └─BatchProject { exprs: [t.v, t.s, ',':Varchar, t.o] }
        └─BatchScan { table: t, columns: [t.v, t.o, t.s], distribution: SomeShard }
  batch_local_plan: |-
    BatchSimpleAgg { aggs: [count(t.v), string_agg(t.s, ',':Varchar order_by(t.o ASC))] }
    └─BatchExchange { order: [], dist: Single }
      └─BatchProject { exprs: [t.v, t.s, ',':Varchar, t.o] }
        └─BatchScan { table: t, columns: [t.v, t.o, t.s], distribution: SomeShard }
- id: extreme_string_agg_on_T
  before:
  - create_tables
  sql: |
    select max(v) as a1, string_agg(s, ',' order by o) as a2 from T;
  batch_plan: |-
    BatchSimpleAgg { aggs: [max(t.v), string_agg(t.s, ',':Varchar order_by(t.o ASC))] }
    └─BatchExchange { order: [], dist: Single }
      └─BatchProject { exprs: [t.v, t.s, ',':Varchar, t.o] }
        └─BatchScan { table: t, columns: [t.v, t.o, t.s], distribution: SomeShard }
  batch_local_plan: |-
    BatchSimpleAgg { aggs: [max(t.v), string_agg(t.s, ',':Varchar order_by(t.o ASC))] }
    └─BatchExchange { order: [], dist: Single }
      └─BatchProject { exprs: [t.v, t.s, ',':Varchar, t.o] }
        └─BatchScan { table: t, columns: [t.v, t.o, t.s], distribution: SomeShard }
- id: extreme_on_T_by_k
  before:
  - create_tables
  sql: |
    select max(v) as a1 from T group by k;
  batch_plan: |-
    BatchExchange { order: [], dist: Single }
    └─BatchProject { exprs: [max(t.v)] }
      └─BatchHashAgg { group_key: [t.k], aggs: [max(t.v)] }
        └─BatchExchange { order: [], dist: HashShard(t.k) }
          └─BatchScan { table: t, columns: [t.k, t.v], distribution: SomeShard }
  batch_local_plan: |-
    BatchProject { exprs: [max(t.v)] }
    └─BatchHashAgg { group_key: [t.k], aggs: [max(t.v)] }
      └─BatchExchange { order: [], dist: Single }
        └─BatchScan { table: t, columns: [t.k, t.v], distribution: SomeShard }
- id: extreme_on_Tk_by_k
  before:
  - create_tables
  sql: |
    select max(v) as a1 from Tk group by k;
  batch_plan: |-
    BatchExchange { order: [], dist: Single }
    └─BatchProject { exprs: [max(tk.v)] }
      └─BatchSortAgg { group_key: [tk.k], aggs: [max(tk.v)] }
        └─BatchScan { table: tk, columns: [tk.k, tk.v], distribution: UpstreamHashShard(tk.k) }
  batch_local_plan: |-
    BatchProject { exprs: [max(tk.v)] }
    └─BatchSortAgg { group_key: [tk.k], aggs: [max(tk.v)] }
      └─BatchExchange { order: [tk.k ASC], dist: Single }
        └─BatchScan { table: tk, columns: [tk.k, tk.v], distribution: UpstreamHashShard(tk.k) }
- id: extreme_on_S_by_k
  before:
  - create_tables
  sql: |
    select max(v) as a1 from S group by k;
  batch_plan: |-
    BatchExchange { order: [], dist: Single }
    └─BatchProject { exprs: [max(s.v)] }
      └─BatchHashAgg { group_key: [s.k], aggs: [max(s.v)] }
        └─BatchExchange { order: [], dist: HashShard(s.k) }
          └─BatchScan { table: s, columns: [s.k, s.v], distribution: Single }
  batch_local_plan: |-
    BatchProject { exprs: [max(s.v)] }
    └─BatchHashAgg { group_key: [s.k], aggs: [max(s.v)] }
      └─BatchExchange { order: [], dist: Single }
        └─BatchScan { table: s, columns: [s.k, s.v], distribution: SomeShard }

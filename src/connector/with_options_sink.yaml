# THIS FILE IS AUTO_GENERATED. DO NOT EDIT
# UPDATE WITH: ./risedev generate-with-options

AzblobConfig:
  fields:
  - name: azblob.container_name
    field_type: String
    required: true
  - name: azblob.path
    field_type: String
    comments: The directory where the sink file is located.
    required: true
  - name: azblob.credentials.account_name
    field_type: String
    required: false
    default: Default::default
  - name: azblob.credentials.account_key
    field_type: String
    required: false
    default: Default::default
  - name: azblob.endpoint_url
    field_type: String
    required: true
  - name: max_row_count
    field_type: usize
    required: false
    default: DEFAULT_MAX_ROW_COUNR
  - name: rollover_seconds
    field_type: usize
    required: false
    default: DEFAULT_ROLLOVER_SECONDS
  - name: path_partition_prefix
    field_type: PathPartitionPrefix
    required: false
    default: Default::default
  - name: r#type
    field_type: String
    required: true
BigQueryConfig:
  fields:
  - name: bigquery.local.path
    field_type: String
    required: false
  - name: bigquery.s3.path
    field_type: String
    required: false
  - name: bigquery.project
    field_type: String
    required: true
  - name: bigquery.dataset
    field_type: String
    required: true
  - name: bigquery.table
    field_type: String
    required: true
  - name: auto_create
    field_type: bool
    required: false
    default: Default::default
  - name: bigquery.credentials
    field_type: String
    required: false
  - name: aws.region
    field_type: String
    required: false
    alias:
    - region
    - s3.region
  - name: aws.endpoint_url
    field_type: String
    required: false
    alias:
    - endpoint_url
    - endpoint
    - s3.endpoint
  - name: aws.credentials.access_key_id
    field_type: String
    required: false
    alias:
    - access_key
    - s3.access.key
  - name: aws.credentials.secret_access_key
    field_type: String
    required: false
    alias:
    - secret_key
    - s3.secret.key
  - name: aws.credentials.session_token
    field_type: String
    required: false
    alias:
    - session_token
  - name: aws.credentials.role.arn
    field_type: String
    comments: IAM role
    required: false
    alias:
    - arn
  - name: aws.credentials.role.external_id
    field_type: String
    comments: external ID in IAM role trust policy
    required: false
    alias:
    - external_id
  - name: aws.profile
    field_type: String
    required: false
    alias:
    - profile
  - name: r#type
    field_type: String
    required: true
ClickHouseConfig:
  fields:
  - name: clickhouse.url
    field_type: String
    required: true
  - name: clickhouse.user
    field_type: String
    required: true
  - name: clickhouse.password
    field_type: String
    required: true
  - name: clickhouse.database
    field_type: String
    required: true
  - name: clickhouse.table
    field_type: String
    required: true
  - name: clickhouse.delete.column
    field_type: String
    required: false
  - name: commit_checkpoint_interval
    field_type: u64
    comments: Commit every n(>0) checkpoints, default is 10.
    required: false
    default: DEFAULT_COMMIT_CHECKPOINT_INTERVAL_WITH_SINK_DECOUPLE
  - name: r#type
    field_type: String
    required: true
DeltaLakeConfig:
  fields:
  - name: location
    field_type: String
    required: true
  - name: aws.region
    field_type: String
    required: false
    alias:
    - region
    - s3.region
  - name: aws.endpoint_url
    field_type: String
    required: false
    alias:
    - endpoint_url
    - endpoint
    - s3.endpoint
  - name: aws.credentials.access_key_id
    field_type: String
    required: false
    alias:
    - access_key
    - s3.access.key
  - name: aws.credentials.secret_access_key
    field_type: String
    required: false
    alias:
    - secret_key
    - s3.secret.key
  - name: aws.credentials.session_token
    field_type: String
    required: false
    alias:
    - session_token
  - name: aws.credentials.role.arn
    field_type: String
    comments: IAM role
    required: false
    alias:
    - arn
  - name: aws.credentials.role.external_id
    field_type: String
    comments: external ID in IAM role trust policy
    required: false
    alias:
    - external_id
  - name: aws.profile
    field_type: String
    required: false
    alias:
    - profile
  - name: gcs.service.account
    field_type: String
    required: false
  - name: commit_checkpoint_interval
    field_type: u64
    comments: Commit every n(>0) checkpoints, default is 10.
    required: false
    default: DEFAULT_COMMIT_CHECKPOINT_INTERVAL_WITH_SINK_DECOUPLE
  - name: r#type
    field_type: String
    required: true
DorisConfig:
  fields:
  - name: doris.url
    field_type: String
    required: true
  - name: doris.user
    field_type: String
    required: true
  - name: doris.password
    field_type: String
    required: true
  - name: doris.database
    field_type: String
    required: true
  - name: doris.table
    field_type: String
    required: true
  - name: doris.partial_update
    field_type: String
    required: false
  - name: r#type
    field_type: String
    required: true
DynamoDbConfig:
  fields:
  - name: table
    field_type: String
    required: true
    alias:
    - dynamodb.table
  - name: dynamodb.max_batch_rows
    field_type: usize
    required: false
    default: '1024'
  - name: aws.region
    field_type: String
    required: false
    alias:
    - region
    - s3.region
  - name: aws.endpoint_url
    field_type: String
    required: false
    alias:
    - endpoint_url
    - endpoint
    - s3.endpoint
  - name: aws.credentials.access_key_id
    field_type: String
    required: false
    alias:
    - access_key
    - s3.access.key
  - name: aws.credentials.secret_access_key
    field_type: String
    required: false
    alias:
    - secret_key
    - s3.secret.key
  - name: aws.credentials.session_token
    field_type: String
    required: false
    alias:
    - session_token
  - name: aws.credentials.role.arn
    field_type: String
    comments: IAM role
    required: false
    alias:
    - arn
  - name: aws.credentials.role.external_id
    field_type: String
    comments: external ID in IAM role trust policy
    required: false
    alias:
    - external_id
  - name: aws.profile
    field_type: String
    required: false
    alias:
    - profile
  - name: dynamodb.max_batch_item_nums
    field_type: usize
    required: false
    default: '25'
  - name: dynamodb.max_future_send_nums
    field_type: usize
    required: false
    default: '256'
ElasticSearchOpenSearchConfig:
  fields:
  - name: url
    field_type: String
    required: true
  - name: index
    field_type: String
    comments: The index's name of elasticsearch or openserach
    required: false
  - name: delimiter
    field_type: String
    comments: If pk is set, then "pk1+delimiter+pk2+delimiter..." will be used as the key, if pk is not set, we will just use the first column as the key.
    required: false
  - name: username
    field_type: String
    comments: The username of elasticsearch or openserach
    required: false
  - name: password
    field_type: String
    comments: The username of elasticsearch or openserach
    required: false
  - name: index_column
    field_type: String
    comments: It is used for dynamic index, if it is be set, the value of this column will be used as the index. It and `index` can only set one
    required: false
  - name: routing_column
    field_type: String
    comments: It is used for dynamic route, if it is be set, the value of this column will be used as the route
    required: false
  - name: retry_on_conflict
    field_type: i32
    required: true
  - name: batch_num_messages
    field_type: usize
    required: true
  - name: batch_size_kb
    field_type: usize
    required: true
  - name: concurrent_requests
    field_type: usize
    required: true
  - name: r#type
    field_type: String
    required: false
    default: '"upsert" . to_owned ()'
FsConfig:
  fields:
  - name: fs.path
    field_type: String
    comments: The directory where the sink file is located.
    required: true
  - name: max_row_count
    field_type: usize
    required: false
    default: DEFAULT_MAX_ROW_COUNR
  - name: rollover_seconds
    field_type: usize
    required: false
    default: DEFAULT_ROLLOVER_SECONDS
  - name: path_partition_prefix
    field_type: PathPartitionPrefix
    required: false
    default: Default::default
  - name: r#type
    field_type: String
    required: true
GcsConfig:
  fields:
  - name: gcs.bucket_name
    field_type: String
    required: true
  - name: gcs.credential
    field_type: String
    comments: The base64 encoded credential key. If not set, ADC will be used.
    required: true
  - name: gcs.service_account
    field_type: String
    comments: If credential/ADC is not set. The service account can be used to provide the credential info.
    required: false
    default: Default::default
  - name: gcs.path
    field_type: String
    comments: The directory where the sink file is located
    required: true
  - name: max_row_count
    field_type: usize
    required: false
    default: DEFAULT_MAX_ROW_COUNR
  - name: rollover_seconds
    field_type: usize
    required: false
    default: DEFAULT_ROLLOVER_SECONDS
  - name: path_partition_prefix
    field_type: PathPartitionPrefix
    required: false
    default: Default::default
  - name: r#type
    field_type: String
    required: true
GooglePubSubConfig:
  fields:
  - name: pubsub.project_id
    field_type: String
    comments: The Google Pub/Sub Project ID
    required: true
  - name: pubsub.topic
    field_type: String
    comments: Specifies the Pub/Sub topic to publish messages
    required: true
  - name: pubsub.endpoint
    field_type: String
    comments: The Google Pub/Sub endpoint URL
    required: true
  - name: pubsub.emulator_host
    field_type: String
    comments: |-
      use the connector with a pubsub emulator
      <https://cloud.google.com/pubsub/docs/emulator>
    required: false
  - name: pubsub.credentials
    field_type: String
    comments: |-
      A JSON string containing the service account credentials for authorization,
      see the [service-account](https://developers.google.com/workspace/guides/create-credentials#create_credentials_for_a_service_account) credentials guide.
      The provided account credential must have the
      `pubsub.publisher` [role](https://cloud.google.com/pubsub/docs/access-control#roles)
    required: false
IcebergConfig:
  fields:
  - name: r#type
    field_type: String
    required: true
  - name: force_append_only
    field_type: bool
    required: false
    default: Default::default
  - name: catalog.type
    field_type: String
    required: false
  - name: s3.region
    field_type: String
    required: false
  - name: s3.endpoint
    field_type: String
    required: false
  - name: s3.access.key
    field_type: String
    required: false
  - name: s3.secret.key
    field_type: String
    required: false
  - name: gcs.credential
    field_type: String
    required: false
  - name: warehouse.path
    field_type: String
    comments: Path of iceberg warehouse, only applicable in storage catalog.
    required: false
  - name: glue.id
    field_type: String
    comments: |-
      AWS Client id, can be omitted for storage catalog or when
      caller's AWS account ID matches glue id
    required: false
  - name: catalog.name
    field_type: String
    comments: |-
      Catalog name, can be omitted for storage catalog, but
      must be set for other catalogs.
    required: false
  - name: catalog.uri
    field_type: String
    comments: URI of iceberg catalog, only applicable in rest catalog.
    required: false
  - name: database.name
    field_type: String
    required: false
  - name: table.name
    field_type: String
    comments: Full name of table, must include schema name.
    required: true
  - name: catalog.credential
    field_type: String
    comments: |-
      Credential for accessing iceberg catalog, only applicable in rest catalog.
      A credential to exchange for a token in the OAuth2 client credentials flow.
    required: false
  - name: catalog.token
    field_type: String
    comments: |-
      token for accessing iceberg catalog, only applicable in rest catalog.
      A Bearer token which will be used for interaction with the server.
    required: false
  - name: catalog.oauth2-server-uri
    field_type: String
    comments: |-
      `oauth2-server-uri` for accessing iceberg catalog, only applicable in rest catalog.
      Token endpoint URI to fetch token from if the Rest Catalog is not the authorization server.
    required: false
  - name: catalog.scope
    field_type: String
    comments: |-
      scope for accessing iceberg catalog, only applicable in rest catalog.
      Additional scope for OAuth2.
    required: false
  - name: s3.path.style.access
    field_type: bool
    required: false
    default: Default::default
  - name: enable_config_load
    field_type: bool
    comments: enable config load currently is used by iceberg engine.
    required: false
    default: Default::default
  - name: primary_key
    field_type: Vec<String>
    required: false
    default: Default::default
  - name: java_catalog_props
    field_type: HashMap<String,String>
    required: false
  - name: partition_by
    field_type: String
    required: false
    default: Default::default
  - name: commit_checkpoint_interval
    field_type: u64
    comments: Commit every n(>0) checkpoints, default is 10.
    required: false
    default: DEFAULT_COMMIT_CHECKPOINT_INTERVAL_WITH_SINK_DECOUPLE
  - name: create_table_if_not_exists
    field_type: bool
    required: false
    default: Default::default
KafkaConfig:
  fields:
  - name: topic
    field_type: String
    required: true
    alias:
    - kafka.topic
  - name: properties.sync.call.timeout
    field_type: Duration
    required: false
    default: 'Duration :: from_secs (5)'
  - name: properties.bootstrap.server
    field_type: String
    required: true
    alias:
    - kafka.brokers
  - name: properties.security.protocol
    field_type: String
    comments: |-
      Security protocol used for RisingWave to communicate with Kafka brokers. Could be
      PLAINTEXT, SSL, SASL_PLAINTEXT or SASL_SSL.
    required: false
  - name: properties.ssl.endpoint.identification.algorithm
    field_type: String
    required: false
  - name: properties.ssl.ca.location
    field_type: String
    comments: Path to CA certificate file for verifying the broker's key.
    required: false
  - name: properties.ssl.ca.pem
    field_type: String
    comments: CA certificate string (PEM format) for verifying the broker's key.
    required: false
  - name: properties.ssl.certificate.location
    field_type: String
    comments: Path to client's certificate file (PEM).
    required: false
  - name: properties.ssl.certificate.pem
    field_type: String
    comments: Client's public key string (PEM format) used for authentication.
    required: false
  - name: properties.ssl.key.location
    field_type: String
    comments: Path to client's private key file (PEM).
    required: false
  - name: properties.ssl.key.pem
    field_type: String
    comments: Client's private key string (PEM format) used for authentication.
    required: false
  - name: properties.ssl.key.password
    field_type: String
    comments: Passphrase of client's private key.
    required: false
  - name: properties.sasl.mechanism
    field_type: String
    comments: SASL mechanism if SASL is enabled. Currently support PLAIN, SCRAM, GSSAPI, and AWS_MSK_IAM.
    required: false
  - name: properties.sasl.username
    field_type: String
    comments: SASL username for SASL/PLAIN and SASL/SCRAM.
    required: false
  - name: properties.sasl.password
    field_type: String
    comments: SASL password for SASL/PLAIN and SASL/SCRAM.
    required: false
  - name: properties.sasl.kerberos.service.name
    field_type: String
    comments: Kafka server's Kerberos principal name under SASL/GSSAPI, not including /hostname@REALM.
    required: false
  - name: properties.sasl.kerberos.keytab
    field_type: String
    comments: Path to client's Kerberos keytab file under SASL/GSSAPI.
    required: false
  - name: properties.sasl.kerberos.principal
    field_type: String
    comments: Client's Kerberos principal name under SASL/GSSAPI.
    required: false
  - name: properties.sasl.kerberos.kinit.cmd
    field_type: String
    comments: Shell command to refresh or acquire the client's Kerberos ticket under SASL/GSSAPI.
    required: false
  - name: properties.sasl.kerberos.min.time.before.relogin
    field_type: String
    comments: Minimum time in milliseconds between key refresh attempts under SASL/GSSAPI.
    required: false
  - name: properties.sasl.oauthbearer.config
    field_type: String
    comments: Configurations for SASL/OAUTHBEARER.
    required: false
  - name: properties.retry.max
    field_type: u32
    required: false
    default: '3'
  - name: properties.retry.interval
    field_type: Duration
    required: false
    default: 'Duration :: from_millis (100)'
  - name: primary_key
    field_type: String
    comments: |-
      We have parsed the primary key for an upsert kafka sink into a `usize` vector representing
      the indices of the pk columns in the frontend, so we simply store the primary key here
      as a string.
    required: false
  - name: properties.message.max.bytes
    field_type: usize
    comments: |-
      Maximum Kafka protocol request message size. Due to differing framing overhead between
      protocol versions the producer is unable to reliably enforce a strict max message limit at
      produce time and may exceed the maximum size by one message in protocol ProduceRequests,
      the broker will enforce the topic's max.message.bytes limit
    required: false
  - name: properties.receive.message.max.bytes
    field_type: usize
    comments: |-
      Maximum Kafka protocol response message size. This serves as a safety precaution to avoid
      memory exhaustion in case of protocol hickups. This value must be at least fetch.max.bytes
      + 512 to allow for protocol overhead; the value is adjusted automatically unless the
      configuration property is explicitly set.
    required: false
  - name: properties.statistics.interval.ms
    field_type: usize
    required: false
  - name: properties.client.id
    field_type: String
    comments: Client identifier
    required: false
  - name: properties.enable.ssl.certificate.verification
    field_type: bool
    required: false
  - name: properties.allow.auto.create.topics
    field_type: bool
    comments: Allow automatic topic creation on the broker when subscribing to or assigning non-existent topics.
    required: false
  - name: properties.queue.buffering.max.messages
    field_type: usize
    comments: |-
      Maximum number of messages allowed on the producer queue. This queue is shared by all
      topics and partitions. A value of 0 disables this limit.
    required: false
  - name: properties.queue.buffering.max.kbytes
    field_type: usize
    comments: |-
      Maximum total message size sum allowed on the producer queue. This queue is shared by all
      topics and partitions. This property has higher priority than queue.buffering.max.messages.
    required: false
  - name: properties.queue.buffering.max.ms
    field_type: f64
    comments: |-
      Delay in milliseconds to wait for messages in the producer queue to accumulate before
      constructing message batches (MessageSets) to transmit to brokers. A higher value allows
      larger and more effective (less overhead, improved compression) batches of messages to
      accumulate at the expense of increased message delivery latency.
    required: false
  - name: properties.enable.idempotence
    field_type: bool
    comments: |-
      When set to true, the producer will ensure that messages are successfully produced exactly
      once and in the original produce order. The following configuration properties are adjusted
      automatically (if not modified by the user) when idempotence is enabled:
      max.in.flight.requests.per.connection=5 (must be less than or equal to 5),
      retries=INT32_MAX (must be greater than 0), acks=all, queuing.strategy=fifo. Producer
      will fail if user-supplied configuration is incompatible.
    required: false
  - name: properties.message.send.max.retries
    field_type: usize
    comments: How many times to retry sending a failing Message.
    required: false
  - name: properties.retry.backoff.ms
    field_type: usize
    comments: The backoff time in milliseconds before retrying a protocol request.
    required: false
  - name: properties.batch.num.messages
    field_type: usize
    comments: Maximum number of messages batched in one MessageSet
    required: false
  - name: properties.batch.size
    field_type: usize
    comments: |-
      Maximum size (in bytes) of all messages batched in one MessageSet, including protocol
      framing overhead. This limit is applied after the first message has been added to the
      batch, regardless of the first message's size, this is to ensure that messages that exceed
      batch.size are produced.
    required: false
  - name: properties.compression.codec
    field_type: CompressionCodec
    comments: Compression codec to use for compressing message sets.
    required: false
  - name: properties.message.timeout.ms
    field_type: usize
    comments: |-
      Produce message timeout.
      This value is used to limits the time a produced message waits for
      successful delivery (including retries).
    required: false
  - name: properties.max.in.flight.requests.per.connection
    field_type: usize
    comments: The maximum number of unacknowledged requests the client will send on a single connection before blocking.
    required: false
    default: '5'
  - name: properties.request.required.acks
    field_type: i32
    required: false
  - name: broker.rewrite.endpoints
    field_type: BTreeMap<String,String>
    comments: This is generated from `private_link_targets` and `private_link_endpoint` in frontend, instead of given by users.
    required: false
  - name: aws.region
    field_type: String
    required: false
    alias:
    - region
    - s3.region
  - name: aws.endpoint_url
    field_type: String
    required: false
    alias:
    - endpoint_url
    - endpoint
    - s3.endpoint
  - name: aws.credentials.access_key_id
    field_type: String
    required: false
    alias:
    - access_key
    - s3.access.key
  - name: aws.credentials.secret_access_key
    field_type: String
    required: false
    alias:
    - secret_key
    - s3.secret.key
  - name: aws.credentials.session_token
    field_type: String
    required: false
    alias:
    - session_token
  - name: aws.credentials.role.arn
    field_type: String
    comments: IAM role
    required: false
    alias:
    - arn
  - name: aws.credentials.role.external_id
    field_type: String
    comments: external ID in IAM role trust policy
    required: false
    alias:
    - external_id
  - name: aws.profile
    field_type: String
    required: false
    alias:
    - profile
KinesisSinkConfig:
  fields:
  - name: stream
    field_type: String
    required: true
    alias:
    - kinesis.stream.name
  - name: aws.region
    field_type: String
    required: true
    alias:
    - kinesis.stream.region
  - name: endpoint
    field_type: String
    required: false
    alias:
    - kinesis.endpoint
  - name: aws.credentials.access_key_id
    field_type: String
    required: false
    alias:
    - kinesis.credentials.access
  - name: aws.credentials.secret_access_key
    field_type: String
    required: false
    alias:
    - kinesis.credentials.secret
  - name: aws.credentials.session_token
    field_type: String
    required: false
    alias:
    - kinesis.credentials.session_token
  - name: aws.credentials.role.arn
    field_type: String
    required: false
    alias:
    - kinesis.assumerole.arn
  - name: aws.credentials.role.external_id
    field_type: String
    required: false
    alias:
    - kinesis.assumerole.external_id
MongodbConfig:
  fields:
  - name: mongodb.url
    field_type: String
    comments: The URL of MongoDB
    required: true
  - name: collection.name
    field_type: String
    comments: |-
      The collection name where data should be written to or read from. For sinks, the format is
      `db_name.collection_name`. Data can also be written to dynamic collections, see `collection.name.field`
      for more information.
    required: true
  - name: r#type
    field_type: String
    required: true
  - name: collection.name.field
    field_type: String
    comments: |-
      The dynamic collection name where data should be sunk to. If specified, the field value will be used
      as the collection name. The collection name format is same as `collection.name`. If the field value is
      null or an empty string, then the `collection.name` will be used as a fallback destination.
    required: false
  - name: collection.name.field.drop
    field_type: bool
    comments: |-
      Controls whether the field value of `collection.name.field` should be dropped when sinking.
      Set this option to true to avoid the duplicate values of `collection.name.field` being written to the
      result collection.
    required: false
    default: Default::default
  - name: mongodb.bulk_write.max_entries
    field_type: usize
    comments: The maximum entries will accumulate before performing the bulk write, defaults to 1024.
    required: false
    default: '1024'
MqttConfig:
  fields:
  - name: url
    field_type: String
    comments: |-
      The url of the broker to connect to. e.g. tcp://localhost.
      Must be prefixed with one of either `tcp://`, `mqtt://`, `ssl://`,`mqtts://`,
      to denote the protocol for establishing a connection with the broker.
      `mqtts://`, `ssl://` will use the native certificates if no ca is specified
    required: true
  - name: qos
    field_type: QualityOfService
    comments: |-
      The quality of service to use when publishing messages. Defaults to at_most_once.
      Could be at_most_once, at_least_once or exactly_once
    required: false
  - name: username
    field_type: String
    comments: Username for the mqtt broker
    required: false
  - name: password
    field_type: String
    comments: Password for the mqtt broker
    required: false
  - name: client_prefix
    field_type: String
    comments: |-
      Prefix for the mqtt client id.
      The client id will be generated as `client_prefix`_`actor_id`_`(executor_id|source_id)`. Defaults to risingwave
    required: false
  - name: clean_start
    field_type: bool
    comments: |-
      `clean_start = true` removes all the state from queues & instructs the broker
      to clean all the client state when client disconnects.

      When set `false`, broker will hold the client state and performs pending
      operations on the client when reconnection with same `client_id`
      happens. Local queue state is also held to retransmit packets after reconnection.
    required: false
    default: Default::default
  - name: inflight_messages
    field_type: usize
    comments: The maximum number of inflight messages. Defaults to 100
    required: false
  - name: max_packet_size
    field_type: u32
    comments: The max size of messages received by the MQTT client
    required: false
  - name: tls.client_key
    field_type: String
    comments: Path to CA certificate file for verifying the broker's key.
    required: false
  - name: tls.client_cert
    field_type: String
    comments: |-
      Path to client's certificate file (PEM). Required for client authentication.
      Can be a file path under fs:// or a string with the certificate content.
    required: false
  - name: tls.client_key
    field_type: String
    comments: |-
      Path to client's private key file (PEM). Required for client authentication.
      Can be a file path under fs:// or a string with the private key content.
    required: false
  - name: topic
    field_type: String
    comments: The topic name to subscribe or publish to. When subscribing, it can be a wildcard topic. e.g /topic/#
    required: false
  - name: retain
    field_type: bool
    comments: Whether the message should be retained by the broker
    required: false
    default: Default::default
  - name: r#type
    field_type: String
    required: true
  - name: topic.field
    field_type: String
    required: false
NatsConfig:
  fields:
  - name: server_url
    field_type: String
    required: true
  - name: subject
    field_type: String
    required: true
  - name: connect_mode
    field_type: String
    required: true
  - name: username
    field_type: String
    required: false
  - name: password
    field_type: String
    required: false
  - name: jwt
    field_type: String
    required: false
  - name: nkey
    field_type: String
    required: false
  - name: max_bytes
    field_type: i64
    required: false
  - name: max_messages
    field_type: i64
    required: false
  - name: max_messages_per_subject
    field_type: i64
    required: false
  - name: max_consumers
    field_type: i32
    required: false
  - name: max_message_size
    field_type: i32
    required: false
  - name: r#type
    field_type: String
    required: true
PulsarConfig:
  fields:
  - name: properties.retry.max
    field_type: u32
    required: false
    default: '3'
  - name: properties.retry.interval
    field_type: Duration
    required: false
    default: 'Duration :: from_millis (100)'
  - name: topic
    field_type: String
    required: true
    alias:
    - pulsar.topic
  - name: service.url
    field_type: String
    required: true
    alias:
    - pulsar.service.url
  - name: auth.token
    field_type: String
    required: false
  - name: oauth.issuer.url
    field_type: String
    required: true
  - name: oauth.credentials.url
    field_type: String
    required: true
  - name: oauth.audience
    field_type: String
    required: true
  - name: oauth.scope
    field_type: String
    required: false
  - name: aws.region
    field_type: String
    required: false
    alias:
    - region
    - s3.region
  - name: aws.endpoint_url
    field_type: String
    required: false
    alias:
    - endpoint_url
    - endpoint
    - s3.endpoint
  - name: aws.credentials.access_key_id
    field_type: String
    required: false
    alias:
    - access_key
    - s3.access.key
  - name: aws.credentials.secret_access_key
    field_type: String
    required: false
    alias:
    - secret_key
    - s3.secret.key
  - name: aws.credentials.session_token
    field_type: String
    required: false
    alias:
    - session_token
  - name: aws.credentials.role.arn
    field_type: String
    comments: IAM role
    required: false
    alias:
    - arn
  - name: aws.credentials.role.external_id
    field_type: String
    comments: external ID in IAM role trust policy
    required: false
    alias:
    - external_id
  - name: aws.profile
    field_type: String
    required: false
    alias:
    - profile
  - name: properties.batch.size
    field_type: u32
    required: false
    default: '10000'
  - name: properties.batch.byte.size
    field_type: usize
    required: false
    default: 1 << 20
RedisConfig:
  fields:
  - name: redis.url
    field_type: String
    required: true
S3Config:
  fields:
  - name: s3.region_name
    field_type: String
    required: true
    alias:
    - snowflake.aws_region
  - name: s3.bucket_name
    field_type: String
    required: true
    alias:
    - snowflake.s3_bucket
  - name: s3.path
    field_type: String
    comments: The directory where the sink file is located.
    required: false
    default: Default::default
    alias:
    - snowflake.s3_path
  - name: s3.credentials.access
    field_type: String
    required: false
    default: Default::default
    alias:
    - snowflake.aws_access_key_id
  - name: s3.credentials.secret
    field_type: String
    required: false
    default: Default::default
    alias:
    - snowflake.aws_secret_access_key
  - name: s3.endpoint_url
    field_type: String
    required: false
  - name: s3.assume_role
    field_type: String
    required: false
    default: Default::default
  - name: max_row_count
    field_type: usize
    required: false
    default: DEFAULT_MAX_ROW_COUNR
  - name: rollover_seconds
    field_type: usize
    required: false
    default: DEFAULT_ROLLOVER_SECONDS
  - name: path_partition_prefix
    field_type: PathPartitionPrefix
    required: false
    default: Default::default
  - name: r#type
    field_type: String
    required: true
SqlServerConfig:
  fields:
  - name: sqlserver.host
    field_type: String
    required: true
  - name: sqlserver.port
    field_type: u16
    required: true
  - name: sqlserver.user
    field_type: String
    required: true
  - name: sqlserver.password
    field_type: String
    required: true
  - name: sqlserver.database
    field_type: String
    required: true
  - name: sqlserver.table
    field_type: String
    required: true
  - name: sqlserver.max_batch_rows
    field_type: usize
    required: false
    default: '1024'
  - name: r#type
    field_type: String
    required: true
StarrocksConfig:
  fields:
  - name: starrocks.host
    field_type: String
    comments: The `StarRocks` host address.
    required: true
  - name: starrocks.mysqlport
    field_type: String
    comments: The port to the MySQL server of `StarRocks` FE.
    required: true
    alias:
    - starrocks.query_port
  - name: starrocks.httpport
    field_type: String
    comments: The port to the HTTP server of `StarRocks` FE.
    required: true
    alias:
    - starrocks.http_port
  - name: starrocks.user
    field_type: String
    comments: The user name used to access the `StarRocks` database.
    required: true
  - name: starrocks.password
    field_type: String
    comments: The password associated with the user.
    required: true
  - name: starrocks.database
    field_type: String
    comments: The `StarRocks` database where the target table is located
    required: true
  - name: starrocks.table
    field_type: String
    comments: The `StarRocks` table you want to sink data to.
    required: true
  - name: starrocks.stream_load.http.timeout.ms
    field_type: u64
    comments: The timeout in milliseconds for stream load http request, defaults to 10 seconds.
    required: false
    default: 30 * 1000
  - name: commit_checkpoint_interval
    field_type: u64
    comments: |-
      Set this option to a positive integer n, RisingWave will try to commit data
      to Starrocks at every n checkpoints by leveraging the
      [StreamLoad Transaction API](https://docs.starrocks.io/docs/loading/Stream_Load_transaction_interface/),
      also, in this time, the `sink_decouple` option should be enabled as well.
      Defaults to 10 if commit_checkpoint_interval <= 0
    required: false
    default: DEFAULT_COMMIT_CHECKPOINT_INTERVAL_WITH_SINK_DECOUPLE
  - name: starrocks.partial_update
    field_type: String
    comments: Enable partial update
    required: false
  - name: r#type
    field_type: String
    required: true
WebhdfsConfig:
  fields:
  - name: webhdfs.endpoint
    field_type: String
    required: true
  - name: webhdfs.path
    field_type: String
    comments: The directory where the sink file is located.
    required: true
  - name: max_row_count
    field_type: usize
    required: false
    default: DEFAULT_MAX_ROW_COUNR
  - name: rollover_seconds
    field_type: usize
    required: false
    default: DEFAULT_ROLLOVER_SECONDS
  - name: path_partition_prefix
    field_type: PathPartitionPrefix
    required: false
    default: Default::default
  - name: r#type
    field_type: String
    required: true

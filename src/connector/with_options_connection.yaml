# THIS FILE IS AUTO_GENERATED. DO NOT EDIT
# UPDATE WITH: ./risedev generate-with-options

ConfluentSchemaRegistryConnection:
  fields:
  - name: schema.registry
    field_type: String
    required: true
  - name: schema.registry.username
    field_type: String
    required: false
  - name: schema.registry.password
    field_type: String
    required: false
IcebergCommon:
  fields:
  - name: catalog.type
    field_type: String
    required: false
  - name: s3.region
    field_type: String
    required: false
  - name: s3.endpoint
    field_type: String
    required: false
  - name: s3.access.key
    field_type: String
    required: false
  - name: s3.secret.key
    field_type: String
    required: false
  - name: gcs.credential
    field_type: String
    required: false
  - name: azblob.account_name
    field_type: String
    required: false
  - name: azblob.account_key
    field_type: String
    required: false
  - name: azblob.endpoint_url
    field_type: String
    required: false
  - name: warehouse.path
    field_type: String
    comments: Path of iceberg warehouse.
    required: false
  - name: glue.id
    field_type: String
    comments: |-
      AWS Client id, can be omitted for storage catalog or when
      caller's AWS account ID matches glue id
    required: false
  - name: catalog.name
    field_type: String
    comments: Catalog name, default value is risingwave.
    required: false
  - name: catalog.uri
    field_type: String
    comments: URI of iceberg catalog, only applicable in rest catalog.
    required: false
  - name: database.name
    field_type: String
    required: false
  - name: table.name
    field_type: String
    comments: Full name of table, must include schema name.
    required: true
  - name: catalog.credential
    field_type: String
    comments: |-
      Credential for accessing iceberg catalog, only applicable in rest catalog.
      A credential to exchange for a token in the `OAuth2` client credentials flow.
    required: false
  - name: catalog.token
    field_type: String
    comments: |-
      token for accessing iceberg catalog, only applicable in rest catalog.
      A Bearer token which will be used for interaction with the server.
    required: false
  - name: catalog.oauth2_server_uri
    field_type: String
    comments: |-
      `oauth2_server_uri` for accessing iceberg catalog, only applicable in rest catalog.
      Token endpoint URI to fetch token from if the Rest Catalog is not the authorization server.
    required: false
  - name: catalog.scope
    field_type: String
    comments: |-
      scope for accessing iceberg catalog, only applicable in rest catalog.
      Additional scope for `OAuth2`.
    required: false
  - name: catalog.rest.signing_region
    field_type: String
    comments: The signing region to use when signing requests to the REST catalog.
    required: false
  - name: catalog.rest.signing_name
    field_type: String
    comments: The signing name to use when signing requests to the REST catalog.
    required: false
  - name: catalog.rest.sigv4_enabled
    field_type: bool
    comments: Whether to use `SigV4` for signing requests to the REST catalog.
    required: false
    default: Default::default
  - name: s3.path.style.access
    field_type: bool
    required: false
    default: Default::default
  - name: enable_config_load
    field_type: bool
    comments: Enable config load. This parameter set to true will load warehouse credentials from the environment. Only allowed to be used in a self-hosted environment.
    required: false
    default: Default::default
  - name: hosted_catalog
    field_type: bool
    comments: This is only used by iceberg engine to enable the hosted catalog.
    required: false
    default: Default::default
IcebergConnection:
  fields:
  - name: catalog.type
    field_type: String
    required: false
  - name: s3.region
    field_type: String
    required: false
  - name: s3.endpoint
    field_type: String
    required: false
  - name: s3.access.key
    field_type: String
    required: false
  - name: s3.secret.key
    field_type: String
    required: false
  - name: gcs.credential
    field_type: String
    required: false
  - name: azblob.account_name
    field_type: String
    required: false
  - name: azblob.account_key
    field_type: String
    required: false
  - name: azblob.endpoint_url
    field_type: String
    required: false
  - name: warehouse.path
    field_type: String
    comments: Path of iceberg warehouse.
    required: false
  - name: glue.id
    field_type: String
    comments: |-
      Catalog id, can be omitted for storage catalog or when
      caller's AWS account ID matches glue id
    required: false
  - name: catalog.name
    field_type: String
    comments: Catalog name, default value is risingwave.
    required: false
  - name: catalog.uri
    field_type: String
    comments: URI of iceberg catalog, only applicable in rest catalog.
    required: false
  - name: catalog.credential
    field_type: String
    comments: |-
      Credential for accessing iceberg catalog, only applicable in rest catalog.
      A credential to exchange for a token in the `OAuth2` client credentials flow.
    required: false
  - name: catalog.token
    field_type: String
    comments: |-
      token for accessing iceberg catalog, only applicable in rest catalog.
      A Bearer token which will be used for interaction with the server.
    required: false
  - name: catalog.oauth2_server_uri
    field_type: String
    comments: |-
      `oauth2_server_uri` for accessing iceberg catalog, only applicable in rest catalog.
      Token endpoint URI to fetch token from if the Rest Catalog is not the authorization server.
    required: false
  - name: catalog.scope
    field_type: String
    comments: |-
      scope for accessing iceberg catalog, only applicable in rest catalog.
      Additional scope for `OAuth2`.
    required: false
  - name: catalog.rest.signing_region
    field_type: String
    comments: The signing region to use when signing requests to the REST catalog.
    required: false
  - name: catalog.rest.signing_name
    field_type: String
    comments: The signing name to use when signing requests to the REST catalog.
    required: false
  - name: catalog.rest.sigv4_enabled
    field_type: bool
    comments: Whether to use `SigV4` for signing requests to the REST catalog.
    required: false
    default: Default::default
  - name: s3.path.style.access
    field_type: bool
    required: false
    default: Default::default
  - name: catalog.jdbc.user
    field_type: String
    required: false
  - name: catalog.jdbc.password
    field_type: String
    required: false
  - name: enable_config_load
    field_type: bool
    comments: Enable config load. This parameter set to true will load warehouse credentials from the environment. Only allowed to be used in a self-hosted environment.
    required: false
    default: Default::default
  - name: hosted_catalog
    field_type: bool
    comments: This is only used by iceberg engine to enable the hosted catalog.
    required: false
    default: Default::default
KafkaCommon:
  fields:
  - name: topic
    field_type: String
    required: true
    alias:
    - kafka.topic
  - name: properties.sync.call.timeout
    field_type: Duration
    required: false
    default: 'Duration :: from_secs (5)'
    allow_alter_on_fly: true
KafkaConnection:
  fields:
  - name: properties.bootstrap.server
    field_type: String
    required: true
    alias:
    - kafka.brokers
  - name: properties.security.protocol
    field_type: String
    comments: |-
      Security protocol used for RisingWave to communicate with Kafka brokers. Could be
      PLAINTEXT, SSL, `SASL_PLAINTEXT` or `SASL_SSL`.
    required: false
    allow_alter_on_fly: true
  - name: properties.ssl.endpoint.identification.algorithm
    field_type: String
    required: false
    allow_alter_on_fly: true
  - name: properties.ssl.ca.location
    field_type: String
    comments: Path to CA certificate file for verifying the broker's key.
    required: false
  - name: properties.ssl.ca.pem
    field_type: String
    comments: CA certificate string (PEM format) for verifying the broker's key.
    required: false
  - name: properties.ssl.certificate.location
    field_type: String
    comments: Path to client's certificate file (PEM).
    required: false
  - name: properties.ssl.certificate.pem
    field_type: String
    comments: Client's public key string (PEM format) used for authentication.
    required: false
  - name: properties.ssl.key.location
    field_type: String
    comments: Path to client's private key file (PEM).
    required: false
  - name: properties.ssl.key.pem
    field_type: String
    comments: Client's private key string (PEM format) used for authentication.
    required: false
  - name: properties.ssl.key.password
    field_type: String
    comments: Passphrase of client's private key.
    required: false
  - name: properties.sasl.mechanism
    field_type: String
    comments: SASL mechanism if SASL is enabled. Currently support PLAIN, SCRAM, GSSAPI, and `AWS_MSK_IAM`.
    required: false
    allow_alter_on_fly: true
  - name: properties.sasl.username
    field_type: String
    comments: SASL username for SASL/PLAIN and SASL/SCRAM.
    required: false
    allow_alter_on_fly: true
  - name: properties.sasl.password
    field_type: String
    comments: SASL password for SASL/PLAIN and SASL/SCRAM.
    required: false
    allow_alter_on_fly: true
  - name: properties.sasl.kerberos.service.name
    field_type: String
    comments: Kafka server's Kerberos principal name under SASL/GSSAPI, not including /hostname@REALM.
    required: false
  - name: properties.sasl.kerberos.keytab
    field_type: String
    comments: Path to client's Kerberos keytab file under SASL/GSSAPI.
    required: false
  - name: properties.sasl.kerberos.principal
    field_type: String
    comments: Client's Kerberos principal name under SASL/GSSAPI.
    required: false
  - name: properties.sasl.kerberos.kinit.cmd
    field_type: String
    comments: Shell command to refresh or acquire the client's Kerberos ticket under SASL/GSSAPI.
    required: false
  - name: properties.sasl.kerberos.min.time.before.relogin
    field_type: String
    comments: Minimum time in milliseconds between key refresh attempts under SASL/GSSAPI.
    required: false
  - name: properties.sasl.oauthbearer.config
    field_type: String
    comments: Configurations for SASL/OAUTHBEARER.
    required: false
  - name: broker.rewrite.endpoints
    field_type: BTreeMap<String,String>
    comments: This is generated from `private_link_targets` and `private_link_endpoint` in frontend, instead of given by users.
    required: false
  - name: aws.region
    field_type: String
    required: false
    alias:
    - region
    - s3.region
  - name: aws.endpoint_url
    field_type: String
    required: false
    alias:
    - endpoint_url
    - endpoint
    - s3.endpoint
  - name: aws.credentials.access_key_id
    field_type: String
    required: false
    alias:
    - access_key
    - s3.access.key
  - name: aws.credentials.secret_access_key
    field_type: String
    required: false
    alias:
    - secret_key
    - s3.secret.key
  - name: aws.credentials.session_token
    field_type: String
    required: false
    alias:
    - session_token
  - name: aws.credentials.role.arn
    field_type: String
    comments: IAM role
    required: false
    alias:
    - arn
  - name: aws.credentials.role.external_id
    field_type: String
    comments: external ID in IAM role trust policy
    required: false
    alias:
    - external_id
  - name: aws.profile
    field_type: String
    required: false
    alias:
    - profile
  - name: aws.msk.signer_timeout_sec
    field_type: u64
    required: false
KinesisCommon:
  fields:
  - name: stream
    field_type: String
    required: true
    alias:
    - kinesis.stream.name
  - name: aws.region
    field_type: String
    required: true
    alias:
    - kinesis.stream.region
  - name: endpoint
    field_type: String
    required: false
    alias:
    - kinesis.endpoint
  - name: aws.credentials.access_key_id
    field_type: String
    required: false
    alias:
    - kinesis.credentials.access
  - name: aws.credentials.secret_access_key
    field_type: String
    required: false
    alias:
    - kinesis.credentials.secret
  - name: aws.credentials.session_token
    field_type: String
    required: false
    alias:
    - kinesis.credentials.session_token
  - name: aws.credentials.role.arn
    field_type: String
    required: false
    alias:
    - kinesis.assumerole.arn
  - name: aws.credentials.role.external_id
    field_type: String
    required: false
    alias:
    - kinesis.assumerole.external_id
  - name: kinesis.sdk.connect_timeout_ms
    field_type: u64
    required: false
    default: '10000'
  - name: kinesis.sdk.read_timeout_ms
    field_type: u64
    required: false
    default: '10000'
  - name: kinesis.sdk.operation_timeout_ms
    field_type: u64
    required: false
    default: '10000'
  - name: kinesis.sdk.operation_attempt_timeout_ms
    field_type: u64
    required: false
    default: '10000'
  - name: kinesis.sdk.max_retry_limit
    field_type: u32
    required: false
    default: '3'
  - name: kinesis.sdk.init_backoff_ms
    field_type: u64
    required: false
    default: '1000'
  - name: kinesis.sdk.max_backoff_ms
    field_type: u64
    required: false
    default: '20000'
MongodbCommon:
  fields:
  - name: mongodb.url
    field_type: String
    comments: The URL of `MongoDB`
    required: true
  - name: collection.name
    field_type: String
    comments: |-
      The collection name where data should be written to or read from. For sinks, the format is
      `db_name.collection_name`. Data can also be written to dynamic collections, see `collection.name.field`
      for more information.
    required: true
MqttCommon:
  fields:
  - name: url
    field_type: String
    comments: |-
      The url of the broker to connect to. e.g. <tcp://localhost>.
      Must be prefixed with one of either `tcp://`, `mqtt://`, `ssl://`,`mqtts://`,
      to denote the protocol for establishing a connection with the broker.
      `mqtts://`, `ssl://` will use the native certificates if no ca is specified
    required: true
  - name: qos
    field_type: QualityOfService
    comments: |-
      The quality of service to use when publishing messages. Defaults to `at_most_once`.
      Could be `at_most_once`, `at_least_once` or `exactly_once`
    required: false
  - name: username
    field_type: String
    comments: Username for the mqtt broker
    required: false
  - name: password
    field_type: String
    comments: Password for the mqtt broker
    required: false
  - name: client_prefix
    field_type: String
    comments: |-
      Prefix for the mqtt client id.
      The client id will be generated as `client_prefix`_`actor_id`_`(executor_id|source_id)`. Defaults to risingwave
    required: false
  - name: clean_start
    field_type: bool
    comments: |-
      `clean_start = true` removes all the state from queues & instructs the broker
      to clean all the client state when client disconnects.

      When set `false`, broker will hold the client state and performs pending
      operations on the client when reconnection with same `client_id`
      happens. Local queue state is also held to retransmit packets after reconnection.
    required: false
    default: Default::default
  - name: inflight_messages
    field_type: usize
    comments: The maximum number of inflight messages. Defaults to 100
    required: false
  - name: max_packet_size
    field_type: u32
    comments: The max size of messages received by the MQTT client
    required: false
  - name: tls.ca
    field_type: String
    comments: Path to CA certificate file for verifying the broker's key.
    required: false
  - name: tls.client_cert
    field_type: String
    comments: |-
      Path to client's certificate file (PEM). Required for client authentication.
      Can be a file path under fs:// or a string with the certificate content.
    required: false
  - name: tls.client_key
    field_type: String
    comments: |-
      Path to client's private key file (PEM). Required for client authentication.
      Can be a file path under fs:// or a string with the private key content.
    required: false
NatsCommon:
  fields:
  - name: server_url
    field_type: String
    required: true
  - name: subject
    field_type: String
    required: true
  - name: connect_mode
    field_type: String
    required: true
  - name: username
    field_type: String
    required: false
  - name: password
    field_type: String
    required: false
  - name: jwt
    field_type: String
    required: false
  - name: nkey
    field_type: String
    required: false
  - name: max_bytes
    field_type: i64
    required: false
  - name: max_messages
    field_type: i64
    required: false
  - name: max_messages_per_subject
    field_type: i64
    required: false
  - name: max_consumers
    field_type: i32
    required: false
  - name: max_message_size
    field_type: i32
    required: false
  - name: allow_create_stream
    field_type: bool
    required: false
    default: Default::default
PulsarCommon:
  fields:
  - name: topic
    field_type: String
    required: true
    alias:
    - pulsar.topic
  - name: service.url
    field_type: String
    required: true
    alias:
    - pulsar.service.url
  - name: auth.token
    field_type: String
    required: false
PulsarOauthCommon:
  fields:
  - name: oauth.issuer.url
    field_type: String
    required: true
  - name: oauth.credentials.url
    field_type: String
    required: true
  - name: oauth.audience
    field_type: String
    required: true
  - name: oauth.scope
    field_type: String
    required: false
RdKafkaPropertiesCommon:
  fields:
  - name: properties.message.max.bytes
    field_type: usize
    comments: |-
      Maximum Kafka protocol request message size. Due to differing framing overhead between
      protocol versions the producer is unable to reliably enforce a strict max message limit at
      produce time and may exceed the maximum size by one message in protocol `ProduceRequests`,
      the broker will enforce the topic's max.message.bytes limit
    required: false
    allow_alter_on_fly: true
  - name: properties.receive.message.max.bytes
    field_type: usize
    comments: |-
      Maximum Kafka protocol response message size. This serves as a safety precaution to avoid
      memory exhaustion in case of protocol hickups. This value must be at least fetch.max.bytes
      + 512 to allow for protocol overhead; the value is adjusted automatically unless the
      configuration property is explicitly set.
    required: false
    allow_alter_on_fly: true
  - name: properties.statistics.interval.ms
    field_type: usize
    required: false
    allow_alter_on_fly: true
  - name: properties.client.id
    field_type: String
    comments: Client identifier
    required: false
    allow_alter_on_fly: true
  - name: properties.enable.ssl.certificate.verification
    field_type: bool
    required: false
    allow_alter_on_fly: true
  - name: properties.socket.keepalive.enable
    field_type: bool
    required: false
    default: 'true'

# This file is automatically generated by `src/sqlparser/tests/parser_test.rs`.
- input: SELECT (1 * 2, 1.0)::foo;
  formatted_sql: SELECT CAST(ROW(1 * 2, 1.0) AS foo)
- input: SELECT ROW(1 * 2, 1.0)::foo;
  formatted_sql: SELECT CAST(ROW(1 * 2, 1.0) AS foo)
- input: SELECT NULL::STRUCT<v1 INT, v2 INT>
  formatted_sql: SELECT CAST(NULL AS STRUCT<v1 INT, v2 INT>)
- input: create table st (v1 int, v2 struct<v1 int, v2 struct<v1 varchar, v2 int>>, v3 struct<v1 varchar, v2 struct<v1 int, v2 varchar>>)
  formatted_sql: CREATE TABLE st (v1 INT, v2 STRUCT<v1 INT, v2 STRUCT<v1 CHARACTER VARYING, v2 INT>>, v3 STRUCT<v1 CHARACTER VARYING, v2 STRUCT<v1 INT, v2 CHARACTER VARYING>>)
- input: SELECT NULL::STRUCT<v1 INT, v2 INT>>
  error_msg: |-
    sql parser error: invalid data_type: unconsumed `>>`
    LINE 1: SELECT NULL::STRUCT<v1 INT, v2 INT>>
                                                ^
- input: SELECT NULL::STRUCT<>
  error_msg: |-
    sql parser error: invalid struct_data_type
    LINE 1: SELECT NULL::STRUCT<>
                               ^
- input: SELECT NULL::STRUCT< >
  formatted_sql: SELECT CAST(NULL AS STRUCT< >)
- input: create table empty_struct (v1 int, v2 struct< >, v3 struct<  >)
  formatted_sql: CREATE TABLE empty_struct (v1 INT, v2 STRUCT< >, v3 STRUCT< >)
- input: create table nested_empty_struct (v struct<v struct<>>)
  error_msg: |-
    sql parser error: invalid struct_data_type
    LINE 1: create table nested_empty_struct (v struct<v struct<>>)
                                                               ^
- input: create table nested_empty_struct (v struct<v1 struct<   >, v2 struct< >>)
  formatted_sql: CREATE TABLE nested_empty_struct (v STRUCT<v1 STRUCT< >, v2 STRUCT< >>)
- input: SELECT ARRAY[]::STRUCT< >[]
  formatted_sql: SELECT CAST(ARRAY[] AS STRUCT< >[])

version: '3.8'

services:
  rest:
    image: tabulario/iceberg-rest:0.6.0
    environment:
      - AWS_ACCESS_KEY_ID=hummockadmin
      - AWS_SECRET_ACCESS_KEY=hummockadmin
      - AWS_REGION=us-east-1
      - CATALOG_CATOLOG__IMPL=org.apache.iceberg.jdbc.JdbcCatalog
      - CATALOG_URI=jdbc:sqlite:file:/tmp/iceberg_rest_mode=memory
      - CATALOG_WAREHOUSE=s3://icebergdata/demo
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio-0:9301
    depends_on:
      - minio-0
    networks:
      - iceberg_net
    links:
      - minio-0:icebergdata.minio-0
    expose:
      - 8181

  spark:
    depends_on:
      - minio-0
      - rest
    image: ghcr.io/icelake-io/icelake-spark:0.1
    environment:
      - AWS_ACCESS_KEY_ID=hummockadmin
      - AWS_SECRET_ACCESS_KEY=hummockadmin
      - AWS_REGION=us-east-1
      - SPARK_HOME=/opt/spark
      - PYSPARK_PYTHON=/usr/bin/python3.9
      - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/spark/bin:/opt/spark/sbin
    user: root
    networks:
      iceberg_net:
    links:
      - minio-0:icebergdata.minio-0
    expose:
      - 15002
    healthcheck:
      test: netstat -ltn | grep -c 15002
      interval: 1s
      retries: 1200
    volumes:
      - ./spark-script:/spark-script
    entrypoint: ["/spark-script/spark-connect-server.sh"]

  risingwave-standalone:
    extends:
      file: ../../../../docker/docker-compose.yml
      service: risingwave-standalone
    healthcheck:
      test:
        - CMD-SHELL
        - bash -c '> /dev/tcp/127.0.0.1/4566; exit $$?;'
      interval: 1s
      timeout: 30s
    networks:
      iceberg_net:

  minio-0:
    extends:
      file: ../../../../docker/docker-compose.yml
      service: minio-0
    entrypoint: "

          /bin/sh -c '

          set -e

          mkdir -p \"/data/icebergdata/demo\"
          mkdir -p \"/data/hummock001\"

          /usr/bin/docker-entrypoint.sh \"$$0\" \"$$@\"

          '"
    networks:
      iceberg_net:

  postgres-0:
    extends:
      file: ../../../../docker/docker-compose.yml
      service: postgres-0
    networks:
      iceberg_net:

volumes:
  risingwave-standalone:
    external: false
  postgres-0:
    external: false
  minio-0:
    external: false

networks:
  iceberg_net:

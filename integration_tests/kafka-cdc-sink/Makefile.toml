[tasks.build-image]
script = "docker compose build"
dependencies = ["clean-all"]

[tasks.start-cluster]
script = """
docker compose up -d;
sleep 10
"""
dependencies = ["build-image"]

[tasks.setup-prepare]
script = """
bash ./prepare.sh
"""
dependencies = ["start-cluster"]

[tasks.setup-risingwave]
script = """
psql -h localhost -p 4566 -d dev -U root -f create_source.sql
psql -h localhost -p 4566 -d dev -U root -f create_mv.sql
psql -h localhost -p 4566 -d dev -U root -f create_sink.sql
"""
dependencies = ["setup-prepare"]

[tasks.setup-connect]
script = '''
curl -i -X POST -H "Accept:application/json" -H  "Content-Type:application/json" http://localhost:8083/connectors/ -d @jsons/mysql-sink.json
sleep 1
'''
dependencies = ["setup-risingwave"]

[tasks.setup]
dependencies = [
    "clean-all",
    "build-image",
    "start-cluster",
    "setup-risingwave",
    "setup-connect"
]

[tasks.clean-all]
script = """
docker compose down --remove-orphans -v
"""

[tasks.check-pg]
script = '''
docker exec postgres bash -c 'psql -U $POSTGRES_USER $POSTGRES_DB -c "select * from counts"'
'''

[tasks.check-mysql]
script = '''
docker exec mysql bash -c 'mysql -u $MYSQL_USER  -p$MYSQL_PASSWORD mydb -e "select * from counts"'
'''

[tasks.check-flink-pg]
script = '''
docker exec postgres bash -c 'psql -U $POSTGRES_USER $POSTGRES_DB -c "select * from flinkcounts"'
'''

[tasks.check-db]
dependencies = [
    "check-pg",
    "check-mysql",
    "check-flink-pg"
]

[tasks.check-com-pg]
script = '''
docker exec postgres bash -c 'psql -U $POSTGRES_USER $POSTGRES_DB -c "select * from types"'
'''

[tasks.check-flink-com-pg]
script = '''
docker exec postgres bash -c 'psql -U $POSTGRES_USER $POSTGRES_DB -c "select * from flink_types"'
'''
